// source: SittelleTypeDictionary.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var SittelleTypeManual_pb = require('./SittelleTypeManual_pb.js');
goog.object.extend(proto, SittelleTypeManual_pb);
var SittelleConst_pb = require('./SittelleConst_pb.js');
goog.object.extend(proto, SittelleConst_pb);
goog.exportSymbol('proto.SittelleProtos.AccountGroupPanel', null, global);
goog.exportSymbol('proto.SittelleProtos.ChartSeries', null, global);
goog.exportSymbol('proto.SittelleProtos.ChartSeriesValue', null, global);
goog.exportSymbol('proto.SittelleProtos.ChartValue', null, global);
goog.exportSymbol('proto.SittelleProtos.DictStatus', null, global);
goog.exportSymbol('proto.SittelleProtos.DictStatusGroup', null, global);
goog.exportSymbol('proto.SittelleProtos.DictTaskTypeSett', null, global);
goog.exportSymbol('proto.SittelleProtos.ManualInfo', null, global);
goog.exportSymbol('proto.SittelleProtos.MonObjectInfo', null, global);
goog.exportSymbol('proto.SittelleProtos.MonObjectShort', null, global);
goog.exportSymbol('proto.SittelleProtos.PanelFilterMonObject', null, global);
goog.exportSymbol('proto.SittelleProtos.PanelFilterMonObjectItem', null, global);
goog.exportSymbol('proto.SittelleProtos.PanelFilterState', null, global);
goog.exportSymbol('proto.SittelleProtos.PanelFilterStateItem', null, global);
goog.exportSymbol('proto.SittelleProtos.PanelFilterStatus', null, global);
goog.exportSymbol('proto.SittelleProtos.PanelFilterStatusGroup', null, global);
goog.exportSymbol('proto.SittelleProtos.PanelFilterStatusGroupItem', null, global);
goog.exportSymbol('proto.SittelleProtos.PanelFilterStatusItem', null, global);
goog.exportSymbol('proto.SittelleProtos.PanelTaskType', null, global);
goog.exportSymbol('proto.SittelleProtos.RoleInfo', null, global);
goog.exportSymbol('proto.SittelleProtos.SittelleChart', null, global);
goog.exportSymbol('proto.SittelleProtos.StateBit', null, global);
goog.exportSymbol('proto.SittelleProtos.StatsAggregateInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.PanelTaskType = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.PanelTaskType, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.PanelTaskType.displayName = 'proto.SittelleProtos.PanelTaskType';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.DictStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.DictStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.DictStatus.displayName = 'proto.SittelleProtos.DictStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.DictStatusGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.DictStatusGroup.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.DictStatusGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.DictStatusGroup.displayName = 'proto.SittelleProtos.DictStatusGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.DictTaskTypeSett = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.DictTaskTypeSett.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.DictTaskTypeSett, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.DictTaskTypeSett.displayName = 'proto.SittelleProtos.DictTaskTypeSett';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.PanelFilterMonObjectItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.PanelFilterMonObjectItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.PanelFilterMonObjectItem.displayName = 'proto.SittelleProtos.PanelFilterMonObjectItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.PanelFilterMonObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.PanelFilterMonObject.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.PanelFilterMonObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.PanelFilterMonObject.displayName = 'proto.SittelleProtos.PanelFilterMonObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.PanelFilterStateItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.PanelFilterStateItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.PanelFilterStateItem.displayName = 'proto.SittelleProtos.PanelFilterStateItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.PanelFilterState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.PanelFilterState.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.PanelFilterState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.PanelFilterState.displayName = 'proto.SittelleProtos.PanelFilterState';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.PanelFilterStatusItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.PanelFilterStatusItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.PanelFilterStatusItem.displayName = 'proto.SittelleProtos.PanelFilterStatusItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.PanelFilterStatus = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.PanelFilterStatus.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.PanelFilterStatus, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.PanelFilterStatus.displayName = 'proto.SittelleProtos.PanelFilterStatus';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.PanelFilterStatusGroupItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.PanelFilterStatusGroupItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.PanelFilterStatusGroupItem.displayName = 'proto.SittelleProtos.PanelFilterStatusGroupItem';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.PanelFilterStatusGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.PanelFilterStatusGroup.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.PanelFilterStatusGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.PanelFilterStatusGroup.displayName = 'proto.SittelleProtos.PanelFilterStatusGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.AccountGroupPanel = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.AccountGroupPanel.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.AccountGroupPanel, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.AccountGroupPanel.displayName = 'proto.SittelleProtos.AccountGroupPanel';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.RoleInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.RoleInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.RoleInfo.displayName = 'proto.SittelleProtos.RoleInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.ChartSeries = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.ChartSeries, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.ChartSeries.displayName = 'proto.SittelleProtos.ChartSeries';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.ChartValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.ChartValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.ChartValue.displayName = 'proto.SittelleProtos.ChartValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.StateBit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.StateBit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.StateBit.displayName = 'proto.SittelleProtos.StateBit';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.ChartSeriesValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.ChartSeriesValue.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.ChartSeriesValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.ChartSeriesValue.displayName = 'proto.SittelleProtos.ChartSeriesValue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.SittelleChart = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.SittelleChart.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.SittelleChart, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.SittelleChart.displayName = 'proto.SittelleProtos.SittelleChart';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.MonObjectInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.MonObjectInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.MonObjectInfo.displayName = 'proto.SittelleProtos.MonObjectInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.MonObjectShort = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.MonObjectShort, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.MonObjectShort.displayName = 'proto.SittelleProtos.MonObjectShort';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.StatsAggregateInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.StatsAggregateInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.StatsAggregateInfo.displayName = 'proto.SittelleProtos.StatsAggregateInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.ManualInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.ManualInfo.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.ManualInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.ManualInfo.displayName = 'proto.SittelleProtos.ManualInfo';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.PanelTaskType.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.PanelTaskType.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.PanelTaskType} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelTaskType.toObject = function(includeInstance, msg) {
  var f, obj = {
    rootTaskTypeInd: jspb.Message.getFieldWithDefault(msg, 1, 0),
    statusInd: jspb.Message.getFieldWithDefault(msg, 2, 0),
    taskTypeInd: jspb.Message.getFieldWithDefault(msg, 3, 0),
    demand: jspb.Message.getFieldWithDefault(msg, 4, 0),
    demandTaskType: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.PanelTaskType}
 */
proto.SittelleProtos.PanelTaskType.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.PanelTaskType;
  return proto.SittelleProtos.PanelTaskType.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.PanelTaskType} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.PanelTaskType}
 */
proto.SittelleProtos.PanelTaskType.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRootTaskTypeInd(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatusInd(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTaskTypeInd(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDemand(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDemandTaskType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.PanelTaskType.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.PanelTaskType.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.PanelTaskType} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelTaskType.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRootTaskTypeInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getStatusInd();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getTaskTypeInd();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getDemand();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getDemandTaskType();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional uint32 root_task_type_ind = 1;
 * @return {number}
 */
proto.SittelleProtos.PanelTaskType.prototype.getRootTaskTypeInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelTaskType} returns this
 */
proto.SittelleProtos.PanelTaskType.prototype.setRootTaskTypeInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 status_ind = 2;
 * @return {number}
 */
proto.SittelleProtos.PanelTaskType.prototype.getStatusInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelTaskType} returns this
 */
proto.SittelleProtos.PanelTaskType.prototype.setStatusInd = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 task_type_ind = 3;
 * @return {number}
 */
proto.SittelleProtos.PanelTaskType.prototype.getTaskTypeInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelTaskType} returns this
 */
proto.SittelleProtos.PanelTaskType.prototype.setTaskTypeInd = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 demand = 4;
 * @return {number}
 */
proto.SittelleProtos.PanelTaskType.prototype.getDemand = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelTaskType} returns this
 */
proto.SittelleProtos.PanelTaskType.prototype.setDemand = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 demand_task_type = 5;
 * @return {number}
 */
proto.SittelleProtos.PanelTaskType.prototype.getDemandTaskType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelTaskType} returns this
 */
proto.SittelleProtos.PanelTaskType.prototype.setDemandTaskType = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.DictStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.DictStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.DictStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.DictStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    ind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    taskTypeInd: jspb.Message.getFieldWithDefault(msg, 2, 0),
    captionCreate: jspb.Message.getFieldWithDefault(msg, 3, ""),
    captionAction: jspb.Message.getFieldWithDefault(msg, 4, ""),
    captionStatus: jspb.Message.getFieldWithDefault(msg, 5, ""),
    colorFont: jspb.Message.getFieldWithDefault(msg, 6, 0),
    colorBackground: jspb.Message.getFieldWithDefault(msg, 7, 0),
    colorFontBase: jspb.Message.getFieldWithDefault(msg, 8, 0),
    colorBackgroundBase: jspb.Message.getFieldWithDefault(msg, 9, 0),
    descr: jspb.Message.getFieldWithDefault(msg, 10, ""),
    priority: jspb.Message.getFieldWithDefault(msg, 11, 0),
    isGroup: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    isGoodCondition: jspb.Message.getBooleanFieldWithDefault(msg, 13, false),
    isOnChart: jspb.Message.getBooleanFieldWithDefault(msg, 14, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.DictStatus}
 */
proto.SittelleProtos.DictStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.DictStatus;
  return proto.SittelleProtos.DictStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.DictStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.DictStatus}
 */
proto.SittelleProtos.DictStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInd(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTaskTypeInd(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaptionCreate(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaptionAction(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaptionStatus(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setColorFont(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColorBackground(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColorFontBase(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColorBackgroundBase(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescr(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPriority(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsGroup(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsGoodCondition(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsOnChart(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.DictStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.DictStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.DictStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.DictStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTaskTypeInd();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getCaptionCreate();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getCaptionAction();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getCaptionStatus();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getColorFont();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getColorBackground();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getColorFontBase();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getColorBackgroundBase();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getDescr();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPriority();
  if (f !== 0) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = message.getIsGroup();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getIsGoodCondition();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getIsOnChart();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
};


/**
 * optional uint32 ind = 1;
 * @return {number}
 */
proto.SittelleProtos.DictStatus.prototype.getInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.DictStatus} returns this
 */
proto.SittelleProtos.DictStatus.prototype.setInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 task_type_ind = 2;
 * @return {number}
 */
proto.SittelleProtos.DictStatus.prototype.getTaskTypeInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.DictStatus} returns this
 */
proto.SittelleProtos.DictStatus.prototype.setTaskTypeInd = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string caption_create = 3;
 * @return {string}
 */
proto.SittelleProtos.DictStatus.prototype.getCaptionCreate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.DictStatus} returns this
 */
proto.SittelleProtos.DictStatus.prototype.setCaptionCreate = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string caption_action = 4;
 * @return {string}
 */
proto.SittelleProtos.DictStatus.prototype.getCaptionAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.DictStatus} returns this
 */
proto.SittelleProtos.DictStatus.prototype.setCaptionAction = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string caption_status = 5;
 * @return {string}
 */
proto.SittelleProtos.DictStatus.prototype.getCaptionStatus = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.DictStatus} returns this
 */
proto.SittelleProtos.DictStatus.prototype.setCaptionStatus = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint32 color_font = 6;
 * @return {number}
 */
proto.SittelleProtos.DictStatus.prototype.getColorFont = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.DictStatus} returns this
 */
proto.SittelleProtos.DictStatus.prototype.setColorFont = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 color_background = 7;
 * @return {number}
 */
proto.SittelleProtos.DictStatus.prototype.getColorBackground = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.DictStatus} returns this
 */
proto.SittelleProtos.DictStatus.prototype.setColorBackground = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 color_font_base = 8;
 * @return {number}
 */
proto.SittelleProtos.DictStatus.prototype.getColorFontBase = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.DictStatus} returns this
 */
proto.SittelleProtos.DictStatus.prototype.setColorFontBase = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 color_background_base = 9;
 * @return {number}
 */
proto.SittelleProtos.DictStatus.prototype.getColorBackgroundBase = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.DictStatus} returns this
 */
proto.SittelleProtos.DictStatus.prototype.setColorBackgroundBase = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional string descr = 10;
 * @return {string}
 */
proto.SittelleProtos.DictStatus.prototype.getDescr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.DictStatus} returns this
 */
proto.SittelleProtos.DictStatus.prototype.setDescr = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional uint32 priority = 11;
 * @return {number}
 */
proto.SittelleProtos.DictStatus.prototype.getPriority = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.DictStatus} returns this
 */
proto.SittelleProtos.DictStatus.prototype.setPriority = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional bool is_group = 12;
 * @return {boolean}
 */
proto.SittelleProtos.DictStatus.prototype.getIsGroup = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SittelleProtos.DictStatus} returns this
 */
proto.SittelleProtos.DictStatus.prototype.setIsGroup = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional bool is_good_condition = 13;
 * @return {boolean}
 */
proto.SittelleProtos.DictStatus.prototype.getIsGoodCondition = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 13, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SittelleProtos.DictStatus} returns this
 */
proto.SittelleProtos.DictStatus.prototype.setIsGoodCondition = function(value) {
  return jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional bool is_on_chart = 14;
 * @return {boolean}
 */
proto.SittelleProtos.DictStatus.prototype.getIsOnChart = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SittelleProtos.DictStatus} returns this
 */
proto.SittelleProtos.DictStatus.prototype.setIsOnChart = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.DictStatusGroup.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.DictStatusGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.DictStatusGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.DictStatusGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.DictStatusGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    ind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    caption: jspb.Message.getFieldWithDefault(msg, 2, ""),
    descr: jspb.Message.getFieldWithDefault(msg, 3, ""),
    sett: jspb.Message.getFieldWithDefault(msg, 4, 0),
    color: jspb.Message.getFieldWithDefault(msg, 5, 0),
    statusIndListList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.DictStatusGroup}
 */
proto.SittelleProtos.DictStatusGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.DictStatusGroup;
  return proto.SittelleProtos.DictStatusGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.DictStatusGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.DictStatusGroup}
 */
proto.SittelleProtos.DictStatusGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInd(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescr(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSett(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setColor(value);
      break;
    case 6:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setStatusIndListList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.DictStatusGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.DictStatusGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.DictStatusGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.DictStatusGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSett();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getColor();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getStatusIndListList();
  if (f.length > 0) {
    writer.writePackedUint32(
      6,
      f
    );
  }
};


/**
 * optional uint32 ind = 1;
 * @return {number}
 */
proto.SittelleProtos.DictStatusGroup.prototype.getInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.DictStatusGroup} returns this
 */
proto.SittelleProtos.DictStatusGroup.prototype.setInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string caption = 2;
 * @return {string}
 */
proto.SittelleProtos.DictStatusGroup.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.DictStatusGroup} returns this
 */
proto.SittelleProtos.DictStatusGroup.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string descr = 3;
 * @return {string}
 */
proto.SittelleProtos.DictStatusGroup.prototype.getDescr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.DictStatusGroup} returns this
 */
proto.SittelleProtos.DictStatusGroup.prototype.setDescr = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint64 sett = 4;
 * @return {number}
 */
proto.SittelleProtos.DictStatusGroup.prototype.getSett = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.DictStatusGroup} returns this
 */
proto.SittelleProtos.DictStatusGroup.prototype.setSett = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 color = 5;
 * @return {number}
 */
proto.SittelleProtos.DictStatusGroup.prototype.getColor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.DictStatusGroup} returns this
 */
proto.SittelleProtos.DictStatusGroup.prototype.setColor = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * repeated uint32 status_ind_list = 6;
 * @return {!Array<number>}
 */
proto.SittelleProtos.DictStatusGroup.prototype.getStatusIndListList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.SittelleProtos.DictStatusGroup} returns this
 */
proto.SittelleProtos.DictStatusGroup.prototype.setStatusIndListList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.DictStatusGroup} returns this
 */
proto.SittelleProtos.DictStatusGroup.prototype.addStatusIndList = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.DictStatusGroup} returns this
 */
proto.SittelleProtos.DictStatusGroup.prototype.clearStatusIndListList = function() {
  return this.setStatusIndListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.DictTaskTypeSett.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.DictTaskTypeSett.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.DictTaskTypeSett.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.DictTaskTypeSett} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.DictTaskTypeSett.toObject = function(includeInstance, msg) {
  var f, obj = {
    ind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    caption: jspb.Message.getFieldWithDefault(msg, 2, ""),
    captionRegion: jspb.Message.getFieldWithDefault(msg, 3, ""),
    statusListList: jspb.Message.toObjectList(msg.getStatusListList(),
    proto.SittelleProtos.DictStatus.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.DictTaskTypeSett}
 */
proto.SittelleProtos.DictTaskTypeSett.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.DictTaskTypeSett;
  return proto.SittelleProtos.DictTaskTypeSett.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.DictTaskTypeSett} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.DictTaskTypeSett}
 */
proto.SittelleProtos.DictTaskTypeSett.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInd(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaptionRegion(value);
      break;
    case 4:
      var value = new proto.SittelleProtos.DictStatus;
      reader.readMessage(value,proto.SittelleProtos.DictStatus.deserializeBinaryFromReader);
      msg.addStatusList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.DictTaskTypeSett.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.DictTaskTypeSett.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.DictTaskTypeSett} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.DictTaskTypeSett.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCaptionRegion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getStatusListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.SittelleProtos.DictStatus.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 ind = 1;
 * @return {number}
 */
proto.SittelleProtos.DictTaskTypeSett.prototype.getInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.DictTaskTypeSett} returns this
 */
proto.SittelleProtos.DictTaskTypeSett.prototype.setInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string caption = 2;
 * @return {string}
 */
proto.SittelleProtos.DictTaskTypeSett.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.DictTaskTypeSett} returns this
 */
proto.SittelleProtos.DictTaskTypeSett.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string caption_region = 3;
 * @return {string}
 */
proto.SittelleProtos.DictTaskTypeSett.prototype.getCaptionRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.DictTaskTypeSett} returns this
 */
proto.SittelleProtos.DictTaskTypeSett.prototype.setCaptionRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated DictStatus status_list = 4;
 * @return {!Array<!proto.SittelleProtos.DictStatus>}
 */
proto.SittelleProtos.DictTaskTypeSett.prototype.getStatusListList = function() {
  return /** @type{!Array<!proto.SittelleProtos.DictStatus>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SittelleProtos.DictStatus, 4));
};


/**
 * @param {!Array<!proto.SittelleProtos.DictStatus>} value
 * @return {!proto.SittelleProtos.DictTaskTypeSett} returns this
*/
proto.SittelleProtos.DictTaskTypeSett.prototype.setStatusListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.SittelleProtos.DictStatus=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.DictStatus}
 */
proto.SittelleProtos.DictTaskTypeSett.prototype.addStatusList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.SittelleProtos.DictStatus, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.DictTaskTypeSett} returns this
 */
proto.SittelleProtos.DictTaskTypeSett.prototype.clearStatusListList = function() {
  return this.setStatusListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.PanelFilterMonObjectItem.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.PanelFilterMonObjectItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.PanelFilterMonObjectItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelFilterMonObjectItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    rootTaskTypeInd: jspb.Message.getFieldWithDefault(msg, 1, 0),
    monObjectInd: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.PanelFilterMonObjectItem}
 */
proto.SittelleProtos.PanelFilterMonObjectItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.PanelFilterMonObjectItem;
  return proto.SittelleProtos.PanelFilterMonObjectItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.PanelFilterMonObjectItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.PanelFilterMonObjectItem}
 */
proto.SittelleProtos.PanelFilterMonObjectItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRootTaskTypeInd(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMonObjectInd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.PanelFilterMonObjectItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.PanelFilterMonObjectItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.PanelFilterMonObjectItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelFilterMonObjectItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRootTaskTypeInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getMonObjectInd();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 root_task_type_ind = 1;
 * @return {number}
 */
proto.SittelleProtos.PanelFilterMonObjectItem.prototype.getRootTaskTypeInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelFilterMonObjectItem} returns this
 */
proto.SittelleProtos.PanelFilterMonObjectItem.prototype.setRootTaskTypeInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 mon_object_ind = 3;
 * @return {number}
 */
proto.SittelleProtos.PanelFilterMonObjectItem.prototype.getMonObjectInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelFilterMonObjectItem} returns this
 */
proto.SittelleProtos.PanelFilterMonObjectItem.prototype.setMonObjectInd = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.PanelFilterMonObject.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.PanelFilterMonObject.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.PanelFilterMonObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.PanelFilterMonObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelFilterMonObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterInd: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountInd: jspb.Message.getFieldWithDefault(msg, 2, 0),
    filterApply: jspb.Message.getFieldWithDefault(msg, 3, 0),
    monobjectListList: jspb.Message.toObjectList(msg.getMonobjectListList(),
    proto.SittelleProtos.PanelFilterMonObjectItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.PanelFilterMonObject}
 */
proto.SittelleProtos.PanelFilterMonObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.PanelFilterMonObject;
  return proto.SittelleProtos.PanelFilterMonObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.PanelFilterMonObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.PanelFilterMonObject}
 */
proto.SittelleProtos.PanelFilterMonObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFilterInd(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccountInd(value);
      break;
    case 3:
      var value = /** @type {!proto.SittelleProtos.EnumFilterApplyType} */ (reader.readEnum());
      msg.setFilterApply(value);
      break;
    case 4:
      var value = new proto.SittelleProtos.PanelFilterMonObjectItem;
      reader.readMessage(value,proto.SittelleProtos.PanelFilterMonObjectItem.deserializeBinaryFromReader);
      msg.addMonobjectList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.PanelFilterMonObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.PanelFilterMonObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.PanelFilterMonObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelFilterMonObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilterInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAccountInd();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getFilterApply();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMonobjectListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.SittelleProtos.PanelFilterMonObjectItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 filter_ind = 1;
 * @return {number}
 */
proto.SittelleProtos.PanelFilterMonObject.prototype.getFilterInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelFilterMonObject} returns this
 */
proto.SittelleProtos.PanelFilterMonObject.prototype.setFilterInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 account_ind = 2;
 * @return {number}
 */
proto.SittelleProtos.PanelFilterMonObject.prototype.getAccountInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelFilterMonObject} returns this
 */
proto.SittelleProtos.PanelFilterMonObject.prototype.setAccountInd = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional EnumFilterApplyType filter_apply = 3;
 * @return {!proto.SittelleProtos.EnumFilterApplyType}
 */
proto.SittelleProtos.PanelFilterMonObject.prototype.getFilterApply = function() {
  return /** @type {!proto.SittelleProtos.EnumFilterApplyType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.SittelleProtos.EnumFilterApplyType} value
 * @return {!proto.SittelleProtos.PanelFilterMonObject} returns this
 */
proto.SittelleProtos.PanelFilterMonObject.prototype.setFilterApply = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * repeated PanelFilterMonObjectItem monobject_list = 4;
 * @return {!Array<!proto.SittelleProtos.PanelFilterMonObjectItem>}
 */
proto.SittelleProtos.PanelFilterMonObject.prototype.getMonobjectListList = function() {
  return /** @type{!Array<!proto.SittelleProtos.PanelFilterMonObjectItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SittelleProtos.PanelFilterMonObjectItem, 4));
};


/**
 * @param {!Array<!proto.SittelleProtos.PanelFilterMonObjectItem>} value
 * @return {!proto.SittelleProtos.PanelFilterMonObject} returns this
*/
proto.SittelleProtos.PanelFilterMonObject.prototype.setMonobjectListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.SittelleProtos.PanelFilterMonObjectItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.PanelFilterMonObjectItem}
 */
proto.SittelleProtos.PanelFilterMonObject.prototype.addMonobjectList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.SittelleProtos.PanelFilterMonObjectItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.PanelFilterMonObject} returns this
 */
proto.SittelleProtos.PanelFilterMonObject.prototype.clearMonobjectListList = function() {
  return this.setMonobjectListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.PanelFilterStateItem.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.PanelFilterStateItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.PanelFilterStateItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelFilterStateItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    rootTaskTypeInd: jspb.Message.getFieldWithDefault(msg, 1, 0),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maskApply: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.PanelFilterStateItem}
 */
proto.SittelleProtos.PanelFilterStateItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.PanelFilterStateItem;
  return proto.SittelleProtos.PanelFilterStateItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.PanelFilterStateItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.PanelFilterStateItem}
 */
proto.SittelleProtos.PanelFilterStateItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRootTaskTypeInd(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setState(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaskApply(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.PanelFilterStateItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.PanelFilterStateItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.PanelFilterStateItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelFilterStateItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRootTaskTypeInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getState();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getMaskApply();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 root_task_type_ind = 1;
 * @return {number}
 */
proto.SittelleProtos.PanelFilterStateItem.prototype.getRootTaskTypeInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelFilterStateItem} returns this
 */
proto.SittelleProtos.PanelFilterStateItem.prototype.setRootTaskTypeInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 state = 2;
 * @return {number}
 */
proto.SittelleProtos.PanelFilterStateItem.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelFilterStateItem} returns this
 */
proto.SittelleProtos.PanelFilterStateItem.prototype.setState = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 mask_apply = 3;
 * @return {number}
 */
proto.SittelleProtos.PanelFilterStateItem.prototype.getMaskApply = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelFilterStateItem} returns this
 */
proto.SittelleProtos.PanelFilterStateItem.prototype.setMaskApply = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.PanelFilterState.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.PanelFilterState.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.PanelFilterState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.PanelFilterState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelFilterState.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterInd: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountInd: jspb.Message.getFieldWithDefault(msg, 2, 0),
    stateListList: jspb.Message.toObjectList(msg.getStateListList(),
    proto.SittelleProtos.PanelFilterStateItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.PanelFilterState}
 */
proto.SittelleProtos.PanelFilterState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.PanelFilterState;
  return proto.SittelleProtos.PanelFilterState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.PanelFilterState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.PanelFilterState}
 */
proto.SittelleProtos.PanelFilterState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFilterInd(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccountInd(value);
      break;
    case 3:
      var value = new proto.SittelleProtos.PanelFilterStateItem;
      reader.readMessage(value,proto.SittelleProtos.PanelFilterStateItem.deserializeBinaryFromReader);
      msg.addStateList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.PanelFilterState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.PanelFilterState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.PanelFilterState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelFilterState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilterInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAccountInd();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getStateListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.SittelleProtos.PanelFilterStateItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 filter_ind = 1;
 * @return {number}
 */
proto.SittelleProtos.PanelFilterState.prototype.getFilterInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelFilterState} returns this
 */
proto.SittelleProtos.PanelFilterState.prototype.setFilterInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 account_ind = 2;
 * @return {number}
 */
proto.SittelleProtos.PanelFilterState.prototype.getAccountInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelFilterState} returns this
 */
proto.SittelleProtos.PanelFilterState.prototype.setAccountInd = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated PanelFilterStateItem state_list = 3;
 * @return {!Array<!proto.SittelleProtos.PanelFilterStateItem>}
 */
proto.SittelleProtos.PanelFilterState.prototype.getStateListList = function() {
  return /** @type{!Array<!proto.SittelleProtos.PanelFilterStateItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SittelleProtos.PanelFilterStateItem, 3));
};


/**
 * @param {!Array<!proto.SittelleProtos.PanelFilterStateItem>} value
 * @return {!proto.SittelleProtos.PanelFilterState} returns this
*/
proto.SittelleProtos.PanelFilterState.prototype.setStateListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.SittelleProtos.PanelFilterStateItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.PanelFilterStateItem}
 */
proto.SittelleProtos.PanelFilterState.prototype.addStateList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.SittelleProtos.PanelFilterStateItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.PanelFilterState} returns this
 */
proto.SittelleProtos.PanelFilterState.prototype.clearStateListList = function() {
  return this.setStateListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.PanelFilterStatusItem.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.PanelFilterStatusItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.PanelFilterStatusItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelFilterStatusItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusInd: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.PanelFilterStatusItem}
 */
proto.SittelleProtos.PanelFilterStatusItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.PanelFilterStatusItem;
  return proto.SittelleProtos.PanelFilterStatusItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.PanelFilterStatusItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.PanelFilterStatusItem}
 */
proto.SittelleProtos.PanelFilterStatusItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatusInd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.PanelFilterStatusItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.PanelFilterStatusItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.PanelFilterStatusItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelFilterStatusItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 status_ind = 1;
 * @return {number}
 */
proto.SittelleProtos.PanelFilterStatusItem.prototype.getStatusInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelFilterStatusItem} returns this
 */
proto.SittelleProtos.PanelFilterStatusItem.prototype.setStatusInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.PanelFilterStatus.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.PanelFilterStatus.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.PanelFilterStatus.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.PanelFilterStatus} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelFilterStatus.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterInd: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountInd: jspb.Message.getFieldWithDefault(msg, 2, 0),
    filterApply: jspb.Message.getFieldWithDefault(msg, 3, 0),
    statusListList: jspb.Message.toObjectList(msg.getStatusListList(),
    proto.SittelleProtos.PanelFilterStatusItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.PanelFilterStatus}
 */
proto.SittelleProtos.PanelFilterStatus.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.PanelFilterStatus;
  return proto.SittelleProtos.PanelFilterStatus.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.PanelFilterStatus} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.PanelFilterStatus}
 */
proto.SittelleProtos.PanelFilterStatus.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFilterInd(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccountInd(value);
      break;
    case 3:
      var value = /** @type {!proto.SittelleProtos.EnumFilterApplyType} */ (reader.readEnum());
      msg.setFilterApply(value);
      break;
    case 4:
      var value = new proto.SittelleProtos.PanelFilterStatusItem;
      reader.readMessage(value,proto.SittelleProtos.PanelFilterStatusItem.deserializeBinaryFromReader);
      msg.addStatusList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.PanelFilterStatus.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.PanelFilterStatus.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.PanelFilterStatus} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelFilterStatus.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilterInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAccountInd();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getFilterApply();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getStatusListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.SittelleProtos.PanelFilterStatusItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 filter_ind = 1;
 * @return {number}
 */
proto.SittelleProtos.PanelFilterStatus.prototype.getFilterInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelFilterStatus} returns this
 */
proto.SittelleProtos.PanelFilterStatus.prototype.setFilterInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 account_ind = 2;
 * @return {number}
 */
proto.SittelleProtos.PanelFilterStatus.prototype.getAccountInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelFilterStatus} returns this
 */
proto.SittelleProtos.PanelFilterStatus.prototype.setAccountInd = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional EnumFilterApplyType filter_apply = 3;
 * @return {!proto.SittelleProtos.EnumFilterApplyType}
 */
proto.SittelleProtos.PanelFilterStatus.prototype.getFilterApply = function() {
  return /** @type {!proto.SittelleProtos.EnumFilterApplyType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.SittelleProtos.EnumFilterApplyType} value
 * @return {!proto.SittelleProtos.PanelFilterStatus} returns this
 */
proto.SittelleProtos.PanelFilterStatus.prototype.setFilterApply = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * repeated PanelFilterStatusItem status_list = 4;
 * @return {!Array<!proto.SittelleProtos.PanelFilterStatusItem>}
 */
proto.SittelleProtos.PanelFilterStatus.prototype.getStatusListList = function() {
  return /** @type{!Array<!proto.SittelleProtos.PanelFilterStatusItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SittelleProtos.PanelFilterStatusItem, 4));
};


/**
 * @param {!Array<!proto.SittelleProtos.PanelFilterStatusItem>} value
 * @return {!proto.SittelleProtos.PanelFilterStatus} returns this
*/
proto.SittelleProtos.PanelFilterStatus.prototype.setStatusListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.SittelleProtos.PanelFilterStatusItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.PanelFilterStatusItem}
 */
proto.SittelleProtos.PanelFilterStatus.prototype.addStatusList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.SittelleProtos.PanelFilterStatusItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.PanelFilterStatus} returns this
 */
proto.SittelleProtos.PanelFilterStatus.prototype.clearStatusListList = function() {
  return this.setStatusListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.PanelFilterStatusGroupItem.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.PanelFilterStatusGroupItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.PanelFilterStatusGroupItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelFilterStatusGroupItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    statusGroupInd: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.PanelFilterStatusGroupItem}
 */
proto.SittelleProtos.PanelFilterStatusGroupItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.PanelFilterStatusGroupItem;
  return proto.SittelleProtos.PanelFilterStatusGroupItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.PanelFilterStatusGroupItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.PanelFilterStatusGroupItem}
 */
proto.SittelleProtos.PanelFilterStatusGroupItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStatusGroupInd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.PanelFilterStatusGroupItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.PanelFilterStatusGroupItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.PanelFilterStatusGroupItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelFilterStatusGroupItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatusGroupInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 status_group_ind = 1;
 * @return {number}
 */
proto.SittelleProtos.PanelFilterStatusGroupItem.prototype.getStatusGroupInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelFilterStatusGroupItem} returns this
 */
proto.SittelleProtos.PanelFilterStatusGroupItem.prototype.setStatusGroupInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.PanelFilterStatusGroup.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.PanelFilterStatusGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.PanelFilterStatusGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.PanelFilterStatusGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelFilterStatusGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterInd: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountInd: jspb.Message.getFieldWithDefault(msg, 2, 0),
    filterApply: jspb.Message.getFieldWithDefault(msg, 3, 0),
    statusGroupListList: jspb.Message.toObjectList(msg.getStatusGroupListList(),
    proto.SittelleProtos.PanelFilterStatusGroupItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.PanelFilterStatusGroup}
 */
proto.SittelleProtos.PanelFilterStatusGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.PanelFilterStatusGroup;
  return proto.SittelleProtos.PanelFilterStatusGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.PanelFilterStatusGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.PanelFilterStatusGroup}
 */
proto.SittelleProtos.PanelFilterStatusGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFilterInd(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccountInd(value);
      break;
    case 3:
      var value = /** @type {!proto.SittelleProtos.EnumFilterApplyType} */ (reader.readEnum());
      msg.setFilterApply(value);
      break;
    case 4:
      var value = new proto.SittelleProtos.PanelFilterStatusGroupItem;
      reader.readMessage(value,proto.SittelleProtos.PanelFilterStatusGroupItem.deserializeBinaryFromReader);
      msg.addStatusGroupList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.PanelFilterStatusGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.PanelFilterStatusGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.PanelFilterStatusGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.PanelFilterStatusGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilterInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAccountInd();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getFilterApply();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getStatusGroupListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.SittelleProtos.PanelFilterStatusGroupItem.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 filter_ind = 1;
 * @return {number}
 */
proto.SittelleProtos.PanelFilterStatusGroup.prototype.getFilterInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelFilterStatusGroup} returns this
 */
proto.SittelleProtos.PanelFilterStatusGroup.prototype.setFilterInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 account_ind = 2;
 * @return {number}
 */
proto.SittelleProtos.PanelFilterStatusGroup.prototype.getAccountInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.PanelFilterStatusGroup} returns this
 */
proto.SittelleProtos.PanelFilterStatusGroup.prototype.setAccountInd = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional EnumFilterApplyType filter_apply = 3;
 * @return {!proto.SittelleProtos.EnumFilterApplyType}
 */
proto.SittelleProtos.PanelFilterStatusGroup.prototype.getFilterApply = function() {
  return /** @type {!proto.SittelleProtos.EnumFilterApplyType} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.SittelleProtos.EnumFilterApplyType} value
 * @return {!proto.SittelleProtos.PanelFilterStatusGroup} returns this
 */
proto.SittelleProtos.PanelFilterStatusGroup.prototype.setFilterApply = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * repeated PanelFilterStatusGroupItem status_group_list = 4;
 * @return {!Array<!proto.SittelleProtos.PanelFilterStatusGroupItem>}
 */
proto.SittelleProtos.PanelFilterStatusGroup.prototype.getStatusGroupListList = function() {
  return /** @type{!Array<!proto.SittelleProtos.PanelFilterStatusGroupItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SittelleProtos.PanelFilterStatusGroupItem, 4));
};


/**
 * @param {!Array<!proto.SittelleProtos.PanelFilterStatusGroupItem>} value
 * @return {!proto.SittelleProtos.PanelFilterStatusGroup} returns this
*/
proto.SittelleProtos.PanelFilterStatusGroup.prototype.setStatusGroupListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.SittelleProtos.PanelFilterStatusGroupItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.PanelFilterStatusGroupItem}
 */
proto.SittelleProtos.PanelFilterStatusGroup.prototype.addStatusGroupList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.SittelleProtos.PanelFilterStatusGroupItem, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.PanelFilterStatusGroup} returns this
 */
proto.SittelleProtos.PanelFilterStatusGroup.prototype.clearStatusGroupListList = function() {
  return this.setStatusGroupListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.AccountGroupPanel.repeatedFields_ = [8,20,21,22];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.AccountGroupPanel.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.AccountGroupPanel} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.AccountGroupPanel.toObject = function(includeInstance, msg) {
  var f, obj = {
    ind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    caption: jspb.Message.getFieldWithDefault(msg, 3, ""),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    descr: jspb.Message.getFieldWithDefault(msg, 5, ""),
    columnList: jspb.Message.getFieldWithDefault(msg, 6, 0),
    accessory: jspb.Message.getFieldWithDefault(msg, 7, 0),
    taskTypeListList: jspb.Message.toObjectList(msg.getTaskTypeListList(),
    proto.SittelleProtos.PanelTaskType.toObject, includeInstance),
    isFirstPage: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    imageInd: jspb.Message.getFieldWithDefault(msg, 10, 0),
    imageActiveFileName: jspb.Message.getFieldWithDefault(msg, 11, ""),
    imageActiveFile: msg.getImageActiveFile_asB64(),
    imagePassiveFileName: jspb.Message.getFieldWithDefault(msg, 13, ""),
    imagePassiveFile: msg.getImagePassiveFile_asB64(),
    archiveOnPanel: jspb.Message.getBooleanFieldWithDefault(msg, 15, false),
    filterMonObject: (f = msg.getFilterMonObject()) && proto.SittelleProtos.PanelFilterMonObject.toObject(includeInstance, f),
    filterState: (f = msg.getFilterState()) && proto.SittelleProtos.PanelFilterState.toObject(includeInstance, f),
    filterStatus: (f = msg.getFilterStatus()) && proto.SittelleProtos.PanelFilterStatus.toObject(includeInstance, f),
    filterStatusGroup: (f = msg.getFilterStatusGroup()) && proto.SittelleProtos.PanelFilterStatusGroup.toObject(includeInstance, f),
    columnRegularListList: (f = jspb.Message.getRepeatedField(msg, 20)) == null ? undefined : f,
    columnRoleListList: (f = jspb.Message.getRepeatedField(msg, 21)) == null ? undefined : f,
    columnManualListList: (f = jspb.Message.getRepeatedField(msg, 22)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.AccountGroupPanel}
 */
proto.SittelleProtos.AccountGroupPanel.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.AccountGroupPanel;
  return proto.SittelleProtos.AccountGroupPanel.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.AccountGroupPanel} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.AccountGroupPanel}
 */
proto.SittelleProtos.AccountGroupPanel.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInd(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescr(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setColumnList(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAccessory(value);
      break;
    case 8:
      var value = new proto.SittelleProtos.PanelTaskType;
      reader.readMessage(value,proto.SittelleProtos.PanelTaskType.deserializeBinaryFromReader);
      msg.addTaskTypeList(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsFirstPage(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setImageInd(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageActiveFileName(value);
      break;
    case 12:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImageActiveFile(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setImagePassiveFileName(value);
      break;
    case 14:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImagePassiveFile(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setArchiveOnPanel(value);
      break;
    case 16:
      var value = new proto.SittelleProtos.PanelFilterMonObject;
      reader.readMessage(value,proto.SittelleProtos.PanelFilterMonObject.deserializeBinaryFromReader);
      msg.setFilterMonObject(value);
      break;
    case 17:
      var value = new proto.SittelleProtos.PanelFilterState;
      reader.readMessage(value,proto.SittelleProtos.PanelFilterState.deserializeBinaryFromReader);
      msg.setFilterState(value);
      break;
    case 18:
      var value = new proto.SittelleProtos.PanelFilterStatus;
      reader.readMessage(value,proto.SittelleProtos.PanelFilterStatus.deserializeBinaryFromReader);
      msg.setFilterStatus(value);
      break;
    case 19:
      var value = new proto.SittelleProtos.PanelFilterStatusGroup;
      reader.readMessage(value,proto.SittelleProtos.PanelFilterStatusGroup.deserializeBinaryFromReader);
      msg.setFilterStatusGroup(value);
      break;
    case 20:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setColumnRegularListList(value);
      break;
    case 21:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setColumnRoleListList(value);
      break;
    case 22:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setColumnManualListList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.AccountGroupPanel.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.AccountGroupPanel} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.AccountGroupPanel.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getDescr();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getColumnList();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = message.getAccessory();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getTaskTypeListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.SittelleProtos.PanelTaskType.serializeBinaryToWriter
    );
  }
  f = message.getIsFirstPage();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getImageInd();
  if (f !== 0) {
    writer.writeUint64(
      10,
      f
    );
  }
  f = message.getImageActiveFileName();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getImageActiveFile_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      12,
      f
    );
  }
  f = message.getImagePassiveFileName();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getImagePassiveFile_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      14,
      f
    );
  }
  f = message.getArchiveOnPanel();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getFilterMonObject();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.SittelleProtos.PanelFilterMonObject.serializeBinaryToWriter
    );
  }
  f = message.getFilterState();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      proto.SittelleProtos.PanelFilterState.serializeBinaryToWriter
    );
  }
  f = message.getFilterStatus();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      proto.SittelleProtos.PanelFilterStatus.serializeBinaryToWriter
    );
  }
  f = message.getFilterStatusGroup();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      proto.SittelleProtos.PanelFilterStatusGroup.serializeBinaryToWriter
    );
  }
  f = message.getColumnRegularListList();
  if (f.length > 0) {
    writer.writePackedUint32(
      20,
      f
    );
  }
  f = message.getColumnRoleListList();
  if (f.length > 0) {
    writer.writePackedUint32(
      21,
      f
    );
  }
  f = message.getColumnManualListList();
  if (f.length > 0) {
    writer.writePackedUint32(
      22,
      f
    );
  }
};


/**
 * optional uint32 ind = 1;
 * @return {number}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.setInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string caption = 3;
 * @return {string}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional bool active = 4;
 * @return {boolean}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string descr = 5;
 * @return {string}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getDescr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.setDescr = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint64 column_list = 6;
 * @return {number}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getColumnList = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.setColumnList = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint64 accessory = 7;
 * @return {number}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getAccessory = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.setAccessory = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * repeated PanelTaskType task_type_list = 8;
 * @return {!Array<!proto.SittelleProtos.PanelTaskType>}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getTaskTypeListList = function() {
  return /** @type{!Array<!proto.SittelleProtos.PanelTaskType>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SittelleProtos.PanelTaskType, 8));
};


/**
 * @param {!Array<!proto.SittelleProtos.PanelTaskType>} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
*/
proto.SittelleProtos.AccountGroupPanel.prototype.setTaskTypeListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.SittelleProtos.PanelTaskType=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.PanelTaskType}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.addTaskTypeList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.SittelleProtos.PanelTaskType, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.clearTaskTypeListList = function() {
  return this.setTaskTypeListList([]);
};


/**
 * optional bool is_first_page = 9;
 * @return {boolean}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getIsFirstPage = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.setIsFirstPage = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional uint64 image_ind = 10;
 * @return {number}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getImageInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.setImageInd = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string image_active_file_name = 11;
 * @return {string}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getImageActiveFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.setImageActiveFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional bytes image_active_file = 12;
 * @return {!(string|Uint8Array)}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getImageActiveFile = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * optional bytes image_active_file = 12;
 * This is a type-conversion wrapper around `getImageActiveFile()`
 * @return {string}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getImageActiveFile_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImageActiveFile()));
};


/**
 * optional bytes image_active_file = 12;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImageActiveFile()`
 * @return {!Uint8Array}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getImageActiveFile_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImageActiveFile()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.setImageActiveFile = function(value) {
  return jspb.Message.setProto3BytesField(this, 12, value);
};


/**
 * optional string image_passive_file_name = 13;
 * @return {string}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getImagePassiveFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.setImagePassiveFileName = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional bytes image_passive_file = 14;
 * @return {!(string|Uint8Array)}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getImagePassiveFile = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * optional bytes image_passive_file = 14;
 * This is a type-conversion wrapper around `getImagePassiveFile()`
 * @return {string}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getImagePassiveFile_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImagePassiveFile()));
};


/**
 * optional bytes image_passive_file = 14;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImagePassiveFile()`
 * @return {!Uint8Array}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getImagePassiveFile_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImagePassiveFile()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.setImagePassiveFile = function(value) {
  return jspb.Message.setProto3BytesField(this, 14, value);
};


/**
 * optional bool archive_on_panel = 15;
 * @return {boolean}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getArchiveOnPanel = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 15, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.setArchiveOnPanel = function(value) {
  return jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional PanelFilterMonObject filter_mon_object = 16;
 * @return {?proto.SittelleProtos.PanelFilterMonObject}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getFilterMonObject = function() {
  return /** @type{?proto.SittelleProtos.PanelFilterMonObject} */ (
    jspb.Message.getWrapperField(this, proto.SittelleProtos.PanelFilterMonObject, 16));
};


/**
 * @param {?proto.SittelleProtos.PanelFilterMonObject|undefined} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
*/
proto.SittelleProtos.AccountGroupPanel.prototype.setFilterMonObject = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.clearFilterMonObject = function() {
  return this.setFilterMonObject(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.hasFilterMonObject = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional PanelFilterState filter_state = 17;
 * @return {?proto.SittelleProtos.PanelFilterState}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getFilterState = function() {
  return /** @type{?proto.SittelleProtos.PanelFilterState} */ (
    jspb.Message.getWrapperField(this, proto.SittelleProtos.PanelFilterState, 17));
};


/**
 * @param {?proto.SittelleProtos.PanelFilterState|undefined} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
*/
proto.SittelleProtos.AccountGroupPanel.prototype.setFilterState = function(value) {
  return jspb.Message.setWrapperField(this, 17, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.clearFilterState = function() {
  return this.setFilterState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.hasFilterState = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional PanelFilterStatus filter_status = 18;
 * @return {?proto.SittelleProtos.PanelFilterStatus}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getFilterStatus = function() {
  return /** @type{?proto.SittelleProtos.PanelFilterStatus} */ (
    jspb.Message.getWrapperField(this, proto.SittelleProtos.PanelFilterStatus, 18));
};


/**
 * @param {?proto.SittelleProtos.PanelFilterStatus|undefined} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
*/
proto.SittelleProtos.AccountGroupPanel.prototype.setFilterStatus = function(value) {
  return jspb.Message.setWrapperField(this, 18, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.clearFilterStatus = function() {
  return this.setFilterStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.hasFilterStatus = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional PanelFilterStatusGroup filter_status_group = 19;
 * @return {?proto.SittelleProtos.PanelFilterStatusGroup}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getFilterStatusGroup = function() {
  return /** @type{?proto.SittelleProtos.PanelFilterStatusGroup} */ (
    jspb.Message.getWrapperField(this, proto.SittelleProtos.PanelFilterStatusGroup, 19));
};


/**
 * @param {?proto.SittelleProtos.PanelFilterStatusGroup|undefined} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
*/
proto.SittelleProtos.AccountGroupPanel.prototype.setFilterStatusGroup = function(value) {
  return jspb.Message.setWrapperField(this, 19, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.clearFilterStatusGroup = function() {
  return this.setFilterStatusGroup(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.hasFilterStatusGroup = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * repeated uint32 column_regular_list = 20;
 * @return {!Array<number>}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getColumnRegularListList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 20));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.setColumnRegularListList = function(value) {
  return jspb.Message.setField(this, 20, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.addColumnRegularList = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 20, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.clearColumnRegularListList = function() {
  return this.setColumnRegularListList([]);
};


/**
 * repeated uint32 column_role_list = 21;
 * @return {!Array<number>}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getColumnRoleListList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 21));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.setColumnRoleListList = function(value) {
  return jspb.Message.setField(this, 21, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.addColumnRoleList = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 21, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.clearColumnRoleListList = function() {
  return this.setColumnRoleListList([]);
};


/**
 * repeated uint32 column_manual_list = 22;
 * @return {!Array<number>}
 */
proto.SittelleProtos.AccountGroupPanel.prototype.getColumnManualListList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 22));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.setColumnManualListList = function(value) {
  return jspb.Message.setField(this, 22, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.addColumnManualList = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 22, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.AccountGroupPanel} returns this
 */
proto.SittelleProtos.AccountGroupPanel.prototype.clearColumnManualListList = function() {
  return this.setColumnManualListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.RoleInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.RoleInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.RoleInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.RoleInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    ind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    caption: jspb.Message.getFieldWithDefault(msg, 2, ""),
    active: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    taskRole: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    captionRegion: jspb.Message.getFieldWithDefault(msg, 5, ""),
    systemRole: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    descr: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.RoleInfo}
 */
proto.SittelleProtos.RoleInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.RoleInfo;
  return proto.SittelleProtos.RoleInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.RoleInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.RoleInfo}
 */
proto.SittelleProtos.RoleInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInd(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setActive(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setTaskRole(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaptionRegion(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSystemRole(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.RoleInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.RoleInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.RoleInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.RoleInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getActive();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getTaskRole();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getCaptionRegion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSystemRole();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getDescr();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional uint32 ind = 1;
 * @return {number}
 */
proto.SittelleProtos.RoleInfo.prototype.getInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.RoleInfo} returns this
 */
proto.SittelleProtos.RoleInfo.prototype.setInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string caption = 2;
 * @return {string}
 */
proto.SittelleProtos.RoleInfo.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.RoleInfo} returns this
 */
proto.SittelleProtos.RoleInfo.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool active = 3;
 * @return {boolean}
 */
proto.SittelleProtos.RoleInfo.prototype.getActive = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SittelleProtos.RoleInfo} returns this
 */
proto.SittelleProtos.RoleInfo.prototype.setActive = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool task_role = 4;
 * @return {boolean}
 */
proto.SittelleProtos.RoleInfo.prototype.getTaskRole = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SittelleProtos.RoleInfo} returns this
 */
proto.SittelleProtos.RoleInfo.prototype.setTaskRole = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional string caption_region = 5;
 * @return {string}
 */
proto.SittelleProtos.RoleInfo.prototype.getCaptionRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.RoleInfo} returns this
 */
proto.SittelleProtos.RoleInfo.prototype.setCaptionRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool system_role = 6;
 * @return {boolean}
 */
proto.SittelleProtos.RoleInfo.prototype.getSystemRole = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SittelleProtos.RoleInfo} returns this
 */
proto.SittelleProtos.RoleInfo.prototype.setSystemRole = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional string descr = 7;
 * @return {string}
 */
proto.SittelleProtos.RoleInfo.prototype.getDescr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.RoleInfo} returns this
 */
proto.SittelleProtos.RoleInfo.prototype.setDescr = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.ChartSeries.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.ChartSeries.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.ChartSeries} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartSeries.toObject = function(includeInstance, msg) {
  var f, obj = {
    ind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    caption: jspb.Message.getFieldWithDefault(msg, 2, ""),
    seriesType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    color: jspb.Message.getFieldWithDefault(msg, 4, 0),
    param: (f = msg.getParam()) && SittelleTypeManual_pb.ManualValue.toObject(includeInstance, f),
    settings: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.ChartSeries}
 */
proto.SittelleProtos.ChartSeries.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.ChartSeries;
  return proto.SittelleProtos.ChartSeries.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.ChartSeries} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.ChartSeries}
 */
proto.SittelleProtos.ChartSeries.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInd(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSeriesType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setColor(value);
      break;
    case 5:
      var value = new SittelleTypeManual_pb.ManualValue;
      reader.readMessage(value,SittelleTypeManual_pb.ManualValue.deserializeBinaryFromReader);
      msg.setParam(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettings(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.ChartSeries.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.ChartSeries.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.ChartSeries} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartSeries.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSeriesType();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getColor();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getParam();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      SittelleTypeManual_pb.ManualValue.serializeBinaryToWriter
    );
  }
  f = message.getSettings();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional uint32 ind = 1;
 * @return {number}
 */
proto.SittelleProtos.ChartSeries.prototype.getInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ChartSeries} returns this
 */
proto.SittelleProtos.ChartSeries.prototype.setInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string caption = 2;
 * @return {string}
 */
proto.SittelleProtos.ChartSeries.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.ChartSeries} returns this
 */
proto.SittelleProtos.ChartSeries.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 series_type = 3;
 * @return {number}
 */
proto.SittelleProtos.ChartSeries.prototype.getSeriesType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ChartSeries} returns this
 */
proto.SittelleProtos.ChartSeries.prototype.setSeriesType = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 color = 4;
 * @return {number}
 */
proto.SittelleProtos.ChartSeries.prototype.getColor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ChartSeries} returns this
 */
proto.SittelleProtos.ChartSeries.prototype.setColor = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional ManualValue param = 5;
 * @return {?proto.SittelleProtos.ManualValue}
 */
proto.SittelleProtos.ChartSeries.prototype.getParam = function() {
  return /** @type{?proto.SittelleProtos.ManualValue} */ (
    jspb.Message.getWrapperField(this, SittelleTypeManual_pb.ManualValue, 5));
};


/**
 * @param {?proto.SittelleProtos.ManualValue|undefined} value
 * @return {!proto.SittelleProtos.ChartSeries} returns this
*/
proto.SittelleProtos.ChartSeries.prototype.setParam = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SittelleProtos.ChartSeries} returns this
 */
proto.SittelleProtos.ChartSeries.prototype.clearParam = function() {
  return this.setParam(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SittelleProtos.ChartSeries.prototype.hasParam = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string settings = 6;
 * @return {string}
 */
proto.SittelleProtos.ChartSeries.prototype.getSettings = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.ChartSeries} returns this
 */
proto.SittelleProtos.ChartSeries.prototype.setSettings = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.ChartValue.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.ChartValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.ChartValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getFloatingPointFieldWithDefault(msg, 1, 0.0),
    y: jspb.Message.getFloatingPointFieldWithDefault(msg, 2, 0.0),
    z: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.ChartValue}
 */
proto.SittelleProtos.ChartValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.ChartValue;
  return proto.SittelleProtos.ChartValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.ChartValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.ChartValue}
 */
proto.SittelleProtos.ChartValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.ChartValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.ChartValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.ChartValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getX();
  if (f !== 0.0) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = message.getY();
  if (f !== 0.0) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = message.getZ();
  if (f !== 0.0) {
    writer.writeDouble(
      3,
      f
    );
  }
};


/**
 * optional double x = 1;
 * @return {number}
 */
proto.SittelleProtos.ChartValue.prototype.getX = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 1, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ChartValue} returns this
 */
proto.SittelleProtos.ChartValue.prototype.setX = function(value) {
  return jspb.Message.setProto3FloatField(this, 1, value);
};


/**
 * optional double y = 2;
 * @return {number}
 */
proto.SittelleProtos.ChartValue.prototype.getY = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 2, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ChartValue} returns this
 */
proto.SittelleProtos.ChartValue.prototype.setY = function(value) {
  return jspb.Message.setProto3FloatField(this, 2, value);
};


/**
 * optional double z = 3;
 * @return {number}
 */
proto.SittelleProtos.ChartValue.prototype.getZ = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ChartValue} returns this
 */
proto.SittelleProtos.ChartValue.prototype.setZ = function(value) {
  return jspb.Message.setProto3FloatField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.StateBit.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.StateBit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.StateBit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.StateBit.toObject = function(includeInstance, msg) {
  var f, obj = {
    bitNumber: jspb.Message.getFieldWithDefault(msg, 1, 0),
    caption: jspb.Message.getFieldWithDefault(msg, 2, ""),
    captionregion: jspb.Message.getFieldWithDefault(msg, 3, ""),
    descr: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.StateBit}
 */
proto.SittelleProtos.StateBit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.StateBit;
  return proto.SittelleProtos.StateBit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.StateBit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.StateBit}
 */
proto.SittelleProtos.StateBit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBitNumber(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaptionregion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.StateBit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.StateBit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.StateBit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.StateBit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBitNumber();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCaptionregion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescr();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint32 bit_number = 1;
 * @return {number}
 */
proto.SittelleProtos.StateBit.prototype.getBitNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.StateBit} returns this
 */
proto.SittelleProtos.StateBit.prototype.setBitNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Caption = 2;
 * @return {string}
 */
proto.SittelleProtos.StateBit.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.StateBit} returns this
 */
proto.SittelleProtos.StateBit.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string CaptionRegion = 3;
 * @return {string}
 */
proto.SittelleProtos.StateBit.prototype.getCaptionregion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.StateBit} returns this
 */
proto.SittelleProtos.StateBit.prototype.setCaptionregion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string Descr = 4;
 * @return {string}
 */
proto.SittelleProtos.StateBit.prototype.getDescr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.StateBit} returns this
 */
proto.SittelleProtos.StateBit.prototype.setDescr = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.ChartSeriesValue.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.ChartSeriesValue.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.ChartSeriesValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.ChartSeriesValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartSeriesValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    seriesInd: jspb.Message.getFieldWithDefault(msg, 1, 0),
    caption: jspb.Message.getFieldWithDefault(msg, 2, ""),
    color: jspb.Message.getFieldWithDefault(msg, 3, 0),
    value: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    valueListList: jspb.Message.toObjectList(msg.getValueListList(),
    proto.SittelleProtos.ChartValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.ChartSeriesValue}
 */
proto.SittelleProtos.ChartSeriesValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.ChartSeriesValue;
  return proto.SittelleProtos.ChartSeriesValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.ChartSeriesValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.ChartSeriesValue}
 */
proto.SittelleProtos.ChartSeriesValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSeriesInd(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setColor(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setValue(value);
      break;
    case 5:
      var value = new proto.SittelleProtos.ChartValue;
      reader.readMessage(value,proto.SittelleProtos.ChartValue.deserializeBinaryFromReader);
      msg.addValueList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.ChartSeriesValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.ChartSeriesValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.ChartSeriesValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartSeriesValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeriesInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getColor();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getValue();
  if (f !== 0.0) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = message.getValueListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.SittelleProtos.ChartValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 series_ind = 1;
 * @return {number}
 */
proto.SittelleProtos.ChartSeriesValue.prototype.getSeriesInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ChartSeriesValue} returns this
 */
proto.SittelleProtos.ChartSeriesValue.prototype.setSeriesInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string caption = 2;
 * @return {string}
 */
proto.SittelleProtos.ChartSeriesValue.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.ChartSeriesValue} returns this
 */
proto.SittelleProtos.ChartSeriesValue.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 color = 3;
 * @return {number}
 */
proto.SittelleProtos.ChartSeriesValue.prototype.getColor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ChartSeriesValue} returns this
 */
proto.SittelleProtos.ChartSeriesValue.prototype.setColor = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional double value = 4;
 * @return {number}
 */
proto.SittelleProtos.ChartSeriesValue.prototype.getValue = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ChartSeriesValue} returns this
 */
proto.SittelleProtos.ChartSeriesValue.prototype.setValue = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * repeated ChartValue value_list = 5;
 * @return {!Array<!proto.SittelleProtos.ChartValue>}
 */
proto.SittelleProtos.ChartSeriesValue.prototype.getValueListList = function() {
  return /** @type{!Array<!proto.SittelleProtos.ChartValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SittelleProtos.ChartValue, 5));
};


/**
 * @param {!Array<!proto.SittelleProtos.ChartValue>} value
 * @return {!proto.SittelleProtos.ChartSeriesValue} returns this
*/
proto.SittelleProtos.ChartSeriesValue.prototype.setValueListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.SittelleProtos.ChartValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.ChartValue}
 */
proto.SittelleProtos.ChartSeriesValue.prototype.addValueList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.SittelleProtos.ChartValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.ChartSeriesValue} returns this
 */
proto.SittelleProtos.ChartSeriesValue.prototype.clearValueListList = function() {
  return this.setValueListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.SittelleChart.repeatedFields_ = [10,11,12,13];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.SittelleChart.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.SittelleChart.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.SittelleChart} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.SittelleChart.toObject = function(includeInstance, msg) {
  var f, obj = {
    ind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    caption: jspb.Message.getFieldWithDefault(msg, 2, ""),
    chartType: jspb.Message.getFieldWithDefault(msg, 3, 0),
    readInterval: jspb.Message.getFieldWithDefault(msg, 4, 0),
    settings: jspb.Message.getFieldWithDefault(msg, 5, ""),
    xMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    xMax: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    yMin: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    yMax: jspb.Message.getFloatingPointFieldWithDefault(msg, 9, 0.0),
    seriesListList: jspb.Message.toObjectList(msg.getSeriesListList(),
    proto.SittelleProtos.ChartSeries.toObject, includeInstance),
    chartRequestAluesList: jspb.Message.toObjectList(msg.getChartRequestAluesList(),
    SittelleTypeManual_pb.ManualRequestValue.toObject, includeInstance),
    seriesRequestValuesList: jspb.Message.toObjectList(msg.getSeriesRequestValuesList(),
    SittelleTypeManual_pb.ManualRequestValue.toObject, includeInstance),
    valueListList: jspb.Message.toObjectList(msg.getValueListList(),
    proto.SittelleProtos.ChartValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.SittelleChart}
 */
proto.SittelleProtos.SittelleChart.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.SittelleChart;
  return proto.SittelleProtos.SittelleChart.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.SittelleChart} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.SittelleChart}
 */
proto.SittelleProtos.SittelleChart.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInd(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChartType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReadInterval(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettings(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setXMin(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setXMax(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setYMin(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setYMax(value);
      break;
    case 10:
      var value = new proto.SittelleProtos.ChartSeries;
      reader.readMessage(value,proto.SittelleProtos.ChartSeries.deserializeBinaryFromReader);
      msg.addSeriesList(value);
      break;
    case 11:
      var value = new SittelleTypeManual_pb.ManualRequestValue;
      reader.readMessage(value,SittelleTypeManual_pb.ManualRequestValue.deserializeBinaryFromReader);
      msg.addChartRequestAlues(value);
      break;
    case 12:
      var value = new SittelleTypeManual_pb.ManualRequestValue;
      reader.readMessage(value,SittelleTypeManual_pb.ManualRequestValue.deserializeBinaryFromReader);
      msg.addSeriesRequestValues(value);
      break;
    case 13:
      var value = new proto.SittelleProtos.ChartValue;
      reader.readMessage(value,proto.SittelleProtos.ChartValue.deserializeBinaryFromReader);
      msg.addValueList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.SittelleChart.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.SittelleChart.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.SittelleChart} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.SittelleChart.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getChartType();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getReadInterval();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getSettings();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getXMin();
  if (f !== 0.0) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = message.getXMax();
  if (f !== 0.0) {
    writer.writeDouble(
      7,
      f
    );
  }
  f = message.getYMin();
  if (f !== 0.0) {
    writer.writeDouble(
      8,
      f
    );
  }
  f = message.getYMax();
  if (f !== 0.0) {
    writer.writeDouble(
      9,
      f
    );
  }
  f = message.getSeriesListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.SittelleProtos.ChartSeries.serializeBinaryToWriter
    );
  }
  f = message.getChartRequestAluesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      11,
      f,
      SittelleTypeManual_pb.ManualRequestValue.serializeBinaryToWriter
    );
  }
  f = message.getSeriesRequestValuesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      12,
      f,
      SittelleTypeManual_pb.ManualRequestValue.serializeBinaryToWriter
    );
  }
  f = message.getValueListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      13,
      f,
      proto.SittelleProtos.ChartValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 ind = 1;
 * @return {number}
 */
proto.SittelleProtos.SittelleChart.prototype.getInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.SittelleChart} returns this
 */
proto.SittelleProtos.SittelleChart.prototype.setInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string caption = 2;
 * @return {string}
 */
proto.SittelleProtos.SittelleChart.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.SittelleChart} returns this
 */
proto.SittelleProtos.SittelleChart.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 chart_type = 3;
 * @return {number}
 */
proto.SittelleProtos.SittelleChart.prototype.getChartType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.SittelleChart} returns this
 */
proto.SittelleProtos.SittelleChart.prototype.setChartType = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 read_interval = 4;
 * @return {number}
 */
proto.SittelleProtos.SittelleChart.prototype.getReadInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.SittelleChart} returns this
 */
proto.SittelleProtos.SittelleChart.prototype.setReadInterval = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string settings = 5;
 * @return {string}
 */
proto.SittelleProtos.SittelleChart.prototype.getSettings = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.SittelleChart} returns this
 */
proto.SittelleProtos.SittelleChart.prototype.setSettings = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional double x_min = 6;
 * @return {number}
 */
proto.SittelleProtos.SittelleChart.prototype.getXMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.SittelleChart} returns this
 */
proto.SittelleProtos.SittelleChart.prototype.setXMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional double x_max = 7;
 * @return {number}
 */
proto.SittelleProtos.SittelleChart.prototype.getXMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.SittelleChart} returns this
 */
proto.SittelleProtos.SittelleChart.prototype.setXMax = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional double y_min = 8;
 * @return {number}
 */
proto.SittelleProtos.SittelleChart.prototype.getYMin = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.SittelleChart} returns this
 */
proto.SittelleProtos.SittelleChart.prototype.setYMin = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional double y_max = 9;
 * @return {number}
 */
proto.SittelleProtos.SittelleChart.prototype.getYMax = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 9, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.SittelleChart} returns this
 */
proto.SittelleProtos.SittelleChart.prototype.setYMax = function(value) {
  return jspb.Message.setProto3FloatField(this, 9, value);
};


/**
 * repeated ChartSeries series_list = 10;
 * @return {!Array<!proto.SittelleProtos.ChartSeries>}
 */
proto.SittelleProtos.SittelleChart.prototype.getSeriesListList = function() {
  return /** @type{!Array<!proto.SittelleProtos.ChartSeries>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SittelleProtos.ChartSeries, 10));
};


/**
 * @param {!Array<!proto.SittelleProtos.ChartSeries>} value
 * @return {!proto.SittelleProtos.SittelleChart} returns this
*/
proto.SittelleProtos.SittelleChart.prototype.setSeriesListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.SittelleProtos.ChartSeries=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.ChartSeries}
 */
proto.SittelleProtos.SittelleChart.prototype.addSeriesList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.SittelleProtos.ChartSeries, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.SittelleChart} returns this
 */
proto.SittelleProtos.SittelleChart.prototype.clearSeriesListList = function() {
  return this.setSeriesListList([]);
};


/**
 * repeated ManualRequestValue chart_request_alues = 11;
 * @return {!Array<!proto.SittelleProtos.ManualRequestValue>}
 */
proto.SittelleProtos.SittelleChart.prototype.getChartRequestAluesList = function() {
  return /** @type{!Array<!proto.SittelleProtos.ManualRequestValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, SittelleTypeManual_pb.ManualRequestValue, 11));
};


/**
 * @param {!Array<!proto.SittelleProtos.ManualRequestValue>} value
 * @return {!proto.SittelleProtos.SittelleChart} returns this
*/
proto.SittelleProtos.SittelleChart.prototype.setChartRequestAluesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 11, value);
};


/**
 * @param {!proto.SittelleProtos.ManualRequestValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.ManualRequestValue}
 */
proto.SittelleProtos.SittelleChart.prototype.addChartRequestAlues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 11, opt_value, proto.SittelleProtos.ManualRequestValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.SittelleChart} returns this
 */
proto.SittelleProtos.SittelleChart.prototype.clearChartRequestAluesList = function() {
  return this.setChartRequestAluesList([]);
};


/**
 * repeated ManualRequestValue series_request_values = 12;
 * @return {!Array<!proto.SittelleProtos.ManualRequestValue>}
 */
proto.SittelleProtos.SittelleChart.prototype.getSeriesRequestValuesList = function() {
  return /** @type{!Array<!proto.SittelleProtos.ManualRequestValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, SittelleTypeManual_pb.ManualRequestValue, 12));
};


/**
 * @param {!Array<!proto.SittelleProtos.ManualRequestValue>} value
 * @return {!proto.SittelleProtos.SittelleChart} returns this
*/
proto.SittelleProtos.SittelleChart.prototype.setSeriesRequestValuesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 12, value);
};


/**
 * @param {!proto.SittelleProtos.ManualRequestValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.ManualRequestValue}
 */
proto.SittelleProtos.SittelleChart.prototype.addSeriesRequestValues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 12, opt_value, proto.SittelleProtos.ManualRequestValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.SittelleChart} returns this
 */
proto.SittelleProtos.SittelleChart.prototype.clearSeriesRequestValuesList = function() {
  return this.setSeriesRequestValuesList([]);
};


/**
 * repeated ChartValue value_list = 13;
 * @return {!Array<!proto.SittelleProtos.ChartValue>}
 */
proto.SittelleProtos.SittelleChart.prototype.getValueListList = function() {
  return /** @type{!Array<!proto.SittelleProtos.ChartValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SittelleProtos.ChartValue, 13));
};


/**
 * @param {!Array<!proto.SittelleProtos.ChartValue>} value
 * @return {!proto.SittelleProtos.SittelleChart} returns this
*/
proto.SittelleProtos.SittelleChart.prototype.setValueListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 13, value);
};


/**
 * @param {!proto.SittelleProtos.ChartValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.ChartValue}
 */
proto.SittelleProtos.SittelleChart.prototype.addValueList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 13, opt_value, proto.SittelleProtos.ChartValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.SittelleChart} returns this
 */
proto.SittelleProtos.SittelleChart.prototype.clearValueListList = function() {
  return this.setValueListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.MonObjectInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.MonObjectInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.MonObjectInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.MonObjectInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    monObjectInd: jspb.Message.getFieldWithDefault(msg, 1, 0),
    caption: jspb.Message.getFieldWithDefault(msg, 2, ""),
    number: jspb.Message.getFieldWithDefault(msg, 3, 0),
    premesisType: jspb.Message.getFieldWithDefault(msg, 4, ""),
    openDate: jspb.Message.getFieldWithDefault(msg, 5, 0),
    unitType: jspb.Message.getFieldWithDefault(msg, 6, ""),
    salesarea: jspb.Message.getFloatingPointFieldWithDefault(msg, 7, 0.0),
    totalarea: jspb.Message.getFloatingPointFieldWithDefault(msg, 8, 0.0),
    region: jspb.Message.getFieldWithDefault(msg, 9, ""),
    company: jspb.Message.getFieldWithDefault(msg, 10, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 11, ""),
    address: jspb.Message.getFieldWithDefault(msg, 12, ""),
    email: jspb.Message.getFieldWithDefault(msg, 13, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.MonObjectInfo}
 */
proto.SittelleProtos.MonObjectInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.MonObjectInfo;
  return proto.SittelleProtos.MonObjectInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.MonObjectInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.MonObjectInfo}
 */
proto.SittelleProtos.MonObjectInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMonObjectInd(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNumber(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPremesisType(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOpenDate(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnitType(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSalesarea(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotalarea(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCompany(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.MonObjectInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.MonObjectInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.MonObjectInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.MonObjectInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMonObjectInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNumber();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getPremesisType();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOpenDate();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getUnitType();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSalesarea();
  if (f !== 0.0) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = message.getTotalarea();
  if (f !== 0.0) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCompany();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional uint32 mon_object_ind = 1;
 * @return {number}
 */
proto.SittelleProtos.MonObjectInfo.prototype.getMonObjectInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.MonObjectInfo} returns this
 */
proto.SittelleProtos.MonObjectInfo.prototype.setMonObjectInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Caption = 2;
 * @return {string}
 */
proto.SittelleProtos.MonObjectInfo.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.MonObjectInfo} returns this
 */
proto.SittelleProtos.MonObjectInfo.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 number = 3;
 * @return {number}
 */
proto.SittelleProtos.MonObjectInfo.prototype.getNumber = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.MonObjectInfo} returns this
 */
proto.SittelleProtos.MonObjectInfo.prototype.setNumber = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string premesis_type = 4;
 * @return {string}
 */
proto.SittelleProtos.MonObjectInfo.prototype.getPremesisType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.MonObjectInfo} returns this
 */
proto.SittelleProtos.MonObjectInfo.prototype.setPremesisType = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 open_date = 5;
 * @return {number}
 */
proto.SittelleProtos.MonObjectInfo.prototype.getOpenDate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.MonObjectInfo} returns this
 */
proto.SittelleProtos.MonObjectInfo.prototype.setOpenDate = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string unit_type = 6;
 * @return {string}
 */
proto.SittelleProtos.MonObjectInfo.prototype.getUnitType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.MonObjectInfo} returns this
 */
proto.SittelleProtos.MonObjectInfo.prototype.setUnitType = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional float SalesArea = 7;
 * @return {number}
 */
proto.SittelleProtos.MonObjectInfo.prototype.getSalesarea = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 7, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.MonObjectInfo} returns this
 */
proto.SittelleProtos.MonObjectInfo.prototype.setSalesarea = function(value) {
  return jspb.Message.setProto3FloatField(this, 7, value);
};


/**
 * optional float TotalArea = 8;
 * @return {number}
 */
proto.SittelleProtos.MonObjectInfo.prototype.getTotalarea = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 8, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.MonObjectInfo} returns this
 */
proto.SittelleProtos.MonObjectInfo.prototype.setTotalarea = function(value) {
  return jspb.Message.setProto3FloatField(this, 8, value);
};


/**
 * optional string Region = 9;
 * @return {string}
 */
proto.SittelleProtos.MonObjectInfo.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.MonObjectInfo} returns this
 */
proto.SittelleProtos.MonObjectInfo.prototype.setRegion = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string company = 10;
 * @return {string}
 */
proto.SittelleProtos.MonObjectInfo.prototype.getCompany = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.MonObjectInfo} returns this
 */
proto.SittelleProtos.MonObjectInfo.prototype.setCompany = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string phone = 11;
 * @return {string}
 */
proto.SittelleProtos.MonObjectInfo.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.MonObjectInfo} returns this
 */
proto.SittelleProtos.MonObjectInfo.prototype.setPhone = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string address = 12;
 * @return {string}
 */
proto.SittelleProtos.MonObjectInfo.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.MonObjectInfo} returns this
 */
proto.SittelleProtos.MonObjectInfo.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string email = 13;
 * @return {string}
 */
proto.SittelleProtos.MonObjectInfo.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.MonObjectInfo} returns this
 */
proto.SittelleProtos.MonObjectInfo.prototype.setEmail = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.MonObjectShort.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.MonObjectShort.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.MonObjectShort} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.MonObjectShort.toObject = function(includeInstance, msg) {
  var f, obj = {
    monObjectInd: jspb.Message.getFieldWithDefault(msg, 1, 0),
    caption: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.MonObjectShort}
 */
proto.SittelleProtos.MonObjectShort.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.MonObjectShort;
  return proto.SittelleProtos.MonObjectShort.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.MonObjectShort} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.MonObjectShort}
 */
proto.SittelleProtos.MonObjectShort.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMonObjectInd(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.MonObjectShort.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.MonObjectShort.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.MonObjectShort} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.MonObjectShort.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMonObjectInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 mon_object_ind = 1;
 * @return {number}
 */
proto.SittelleProtos.MonObjectShort.prototype.getMonObjectInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.MonObjectShort} returns this
 */
proto.SittelleProtos.MonObjectShort.prototype.setMonObjectInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string Caption = 2;
 * @return {string}
 */
proto.SittelleProtos.MonObjectShort.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.MonObjectShort} returns this
 */
proto.SittelleProtos.MonObjectShort.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.StatsAggregateInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.StatsAggregateInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.StatsAggregateInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.StatsAggregateInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    ind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    caption: jspb.Message.getFieldWithDefault(msg, 2, ""),
    descr: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.StatsAggregateInfo}
 */
proto.SittelleProtos.StatsAggregateInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.StatsAggregateInfo;
  return proto.SittelleProtos.StatsAggregateInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.StatsAggregateInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.StatsAggregateInfo}
 */
proto.SittelleProtos.StatsAggregateInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInd(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.StatsAggregateInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.StatsAggregateInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.StatsAggregateInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.StatsAggregateInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescr();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint32 ind = 1;
 * @return {number}
 */
proto.SittelleProtos.StatsAggregateInfo.prototype.getInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.StatsAggregateInfo} returns this
 */
proto.SittelleProtos.StatsAggregateInfo.prototype.setInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string caption = 2;
 * @return {string}
 */
proto.SittelleProtos.StatsAggregateInfo.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.StatsAggregateInfo} returns this
 */
proto.SittelleProtos.StatsAggregateInfo.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string descr = 3;
 * @return {string}
 */
proto.SittelleProtos.StatsAggregateInfo.prototype.getDescr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.StatsAggregateInfo} returns this
 */
proto.SittelleProtos.StatsAggregateInfo.prototype.setDescr = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.ManualInfo.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.ManualInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.ManualInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.ManualInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ManualInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    ind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    caption: jspb.Message.getFieldWithDefault(msg, 3, ""),
    paramType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    isObligatory: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    linkInd: jspb.Message.getFieldWithDefault(msg, 6, 0),
    taskTypeListList: (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.ManualInfo}
 */
proto.SittelleProtos.ManualInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.ManualInfo;
  return proto.SittelleProtos.ManualInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.ManualInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.ManualInfo}
 */
proto.SittelleProtos.ManualInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInd(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setParamType(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsObligatory(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLinkInd(value);
      break;
    case 7:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint32());
      msg.setTaskTypeListList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.ManualInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.ManualInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.ManualInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ManualInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getParamType();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getIsObligatory();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getLinkInd();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getTaskTypeListList();
  if (f.length > 0) {
    writer.writePackedUint32(
      7,
      f
    );
  }
};


/**
 * optional uint32 ind = 1;
 * @return {number}
 */
proto.SittelleProtos.ManualInfo.prototype.getInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ManualInfo} returns this
 */
proto.SittelleProtos.ManualInfo.prototype.setInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.SittelleProtos.ManualInfo.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.ManualInfo} returns this
 */
proto.SittelleProtos.ManualInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string caption = 3;
 * @return {string}
 */
proto.SittelleProtos.ManualInfo.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.ManualInfo} returns this
 */
proto.SittelleProtos.ManualInfo.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 param_type = 4;
 * @return {number}
 */
proto.SittelleProtos.ManualInfo.prototype.getParamType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ManualInfo} returns this
 */
proto.SittelleProtos.ManualInfo.prototype.setParamType = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool is_obligatory = 5;
 * @return {boolean}
 */
proto.SittelleProtos.ManualInfo.prototype.getIsObligatory = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SittelleProtos.ManualInfo} returns this
 */
proto.SittelleProtos.ManualInfo.prototype.setIsObligatory = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional uint32 link_ind = 6;
 * @return {number}
 */
proto.SittelleProtos.ManualInfo.prototype.getLinkInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ManualInfo} returns this
 */
proto.SittelleProtos.ManualInfo.prototype.setLinkInd = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated uint32 task_type_list = 7;
 * @return {!Array<number>}
 */
proto.SittelleProtos.ManualInfo.prototype.getTaskTypeListList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 7));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.SittelleProtos.ManualInfo} returns this
 */
proto.SittelleProtos.ManualInfo.prototype.setTaskTypeListList = function(value) {
  return jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.ManualInfo} returns this
 */
proto.SittelleProtos.ManualInfo.prototype.addTaskTypeList = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.ManualInfo} returns this
 */
proto.SittelleProtos.ManualInfo.prototype.clearTaskTypeListList = function() {
  return this.setTaskTypeListList([]);
};


goog.object.extend(exports, proto.SittelleProtos);
