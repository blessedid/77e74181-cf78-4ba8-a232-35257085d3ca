// source: SittelleTypeReport.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.SittelleProtos.EnumHorzntalAllign', null, global);
goog.exportSymbol('proto.SittelleProtos.ReportFont', null, global);
goog.exportSymbol('proto.SittelleProtos.ReportHeader', null, global);
goog.exportSymbol('proto.SittelleProtos.ReportHeaderGroup', null, global);
goog.exportSymbol('proto.SittelleProtos.ReportSett', null, global);
goog.exportSymbol('proto.SittelleProtos.ReportValue', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.ReportFont = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.ReportFont, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.ReportFont.displayName = 'proto.SittelleProtos.ReportFont';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.ReportHeader = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.ReportHeader, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.ReportHeader.displayName = 'proto.SittelleProtos.ReportHeader';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.ReportHeaderGroup = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.ReportHeaderGroup.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.ReportHeaderGroup, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.ReportHeaderGroup.displayName = 'proto.SittelleProtos.ReportHeaderGroup';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.ReportSett = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.ReportSett, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.ReportSett.displayName = 'proto.SittelleProtos.ReportSett';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.ReportValue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.ReportValue.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.ReportValue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.ReportValue.displayName = 'proto.SittelleProtos.ReportValue';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.ReportFont.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.ReportFont.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.ReportFont} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ReportFont.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    size: jspb.Message.getFieldWithDefault(msg, 2, 0),
    bold: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    underline: jspb.Message.getBooleanFieldWithDefault(msg, 4, false),
    italic: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    strikeout: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.ReportFont}
 */
proto.SittelleProtos.ReportFont.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.ReportFont;
  return proto.SittelleProtos.ReportFont.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.ReportFont} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.ReportFont}
 */
proto.SittelleProtos.ReportFont.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSize(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBold(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUnderline(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setItalic(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setStrikeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.ReportFont.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.ReportFont.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.ReportFont} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ReportFont.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSize();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getBold();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getUnderline();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getItalic();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getStrikeout();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.SittelleProtos.ReportFont.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.ReportFont} returns this
 */
proto.SittelleProtos.ReportFont.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 size = 2;
 * @return {number}
 */
proto.SittelleProtos.ReportFont.prototype.getSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ReportFont} returns this
 */
proto.SittelleProtos.ReportFont.prototype.setSize = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool bold = 3;
 * @return {boolean}
 */
proto.SittelleProtos.ReportFont.prototype.getBold = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SittelleProtos.ReportFont} returns this
 */
proto.SittelleProtos.ReportFont.prototype.setBold = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool underline = 4;
 * @return {boolean}
 */
proto.SittelleProtos.ReportFont.prototype.getUnderline = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SittelleProtos.ReportFont} returns this
 */
proto.SittelleProtos.ReportFont.prototype.setUnderline = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional bool italic = 5;
 * @return {boolean}
 */
proto.SittelleProtos.ReportFont.prototype.getItalic = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SittelleProtos.ReportFont} returns this
 */
proto.SittelleProtos.ReportFont.prototype.setItalic = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool strikeout = 6;
 * @return {boolean}
 */
proto.SittelleProtos.ReportFont.prototype.getStrikeout = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SittelleProtos.ReportFont} returns this
 */
proto.SittelleProtos.ReportFont.prototype.setStrikeout = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.ReportHeader.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.ReportHeader.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.ReportHeader} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ReportHeader.toObject = function(includeInstance, msg) {
  var f, obj = {
    ind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    header: jspb.Message.getFieldWithDefault(msg, 2, ""),
    value: jspb.Message.getFieldWithDefault(msg, 3, ""),
    width: jspb.Message.getFieldWithDefault(msg, 4, 0),
    headerAlign: jspb.Message.getFieldWithDefault(msg, 5, 0),
    paramType: jspb.Message.getFieldWithDefault(msg, 6, 0),
    linkInd: jspb.Message.getFieldWithDefault(msg, 7, 0),
    rowAlign: jspb.Message.getFieldWithDefault(msg, 8, 0),
    visible: jspb.Message.getBooleanFieldWithDefault(msg, 9, false),
    headerFont: (f = msg.getHeaderFont()) && proto.SittelleProtos.ReportFont.toObject(includeInstance, f),
    valueFont: (f = msg.getValueFont()) && proto.SittelleProtos.ReportFont.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.ReportHeader}
 */
proto.SittelleProtos.ReportHeader.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.ReportHeader;
  return proto.SittelleProtos.ReportHeader.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.ReportHeader} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.ReportHeader}
 */
proto.SittelleProtos.ReportHeader.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInd(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeader(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWidth(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeaderAlign(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setParamType(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLinkInd(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRowAlign(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVisible(value);
      break;
    case 10:
      var value = new proto.SittelleProtos.ReportFont;
      reader.readMessage(value,proto.SittelleProtos.ReportFont.deserializeBinaryFromReader);
      msg.setHeaderFont(value);
      break;
    case 11:
      var value = new proto.SittelleProtos.ReportFont;
      reader.readMessage(value,proto.SittelleProtos.ReportFont.deserializeBinaryFromReader);
      msg.setValueFont(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.ReportHeader.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.ReportHeader.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.ReportHeader} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ReportHeader.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getHeader();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWidth();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getHeaderAlign();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getParamType();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getLinkInd();
  if (f !== 0) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = message.getRowAlign();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getVisible();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getHeaderFont();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.SittelleProtos.ReportFont.serializeBinaryToWriter
    );
  }
  f = message.getValueFont();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.SittelleProtos.ReportFont.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 ind = 1;
 * @return {number}
 */
proto.SittelleProtos.ReportHeader.prototype.getInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ReportHeader} returns this
 */
proto.SittelleProtos.ReportHeader.prototype.setInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string header = 2;
 * @return {string}
 */
proto.SittelleProtos.ReportHeader.prototype.getHeader = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.ReportHeader} returns this
 */
proto.SittelleProtos.ReportHeader.prototype.setHeader = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.SittelleProtos.ReportHeader.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.ReportHeader} returns this
 */
proto.SittelleProtos.ReportHeader.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional uint32 width = 4;
 * @return {number}
 */
proto.SittelleProtos.ReportHeader.prototype.getWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ReportHeader} returns this
 */
proto.SittelleProtos.ReportHeader.prototype.setWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 header_align = 5;
 * @return {number}
 */
proto.SittelleProtos.ReportHeader.prototype.getHeaderAlign = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ReportHeader} returns this
 */
proto.SittelleProtos.ReportHeader.prototype.setHeaderAlign = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 param_type = 6;
 * @return {number}
 */
proto.SittelleProtos.ReportHeader.prototype.getParamType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ReportHeader} returns this
 */
proto.SittelleProtos.ReportHeader.prototype.setParamType = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional uint32 link_ind = 7;
 * @return {number}
 */
proto.SittelleProtos.ReportHeader.prototype.getLinkInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ReportHeader} returns this
 */
proto.SittelleProtos.ReportHeader.prototype.setLinkInd = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 row_align = 8;
 * @return {number}
 */
proto.SittelleProtos.ReportHeader.prototype.getRowAlign = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ReportHeader} returns this
 */
proto.SittelleProtos.ReportHeader.prototype.setRowAlign = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional bool visible = 9;
 * @return {boolean}
 */
proto.SittelleProtos.ReportHeader.prototype.getVisible = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 9, false));
};


/**
 * @param {boolean} value
 * @return {!proto.SittelleProtos.ReportHeader} returns this
 */
proto.SittelleProtos.ReportHeader.prototype.setVisible = function(value) {
  return jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional ReportFont header_font = 10;
 * @return {?proto.SittelleProtos.ReportFont}
 */
proto.SittelleProtos.ReportHeader.prototype.getHeaderFont = function() {
  return /** @type{?proto.SittelleProtos.ReportFont} */ (
    jspb.Message.getWrapperField(this, proto.SittelleProtos.ReportFont, 10));
};


/**
 * @param {?proto.SittelleProtos.ReportFont|undefined} value
 * @return {!proto.SittelleProtos.ReportHeader} returns this
*/
proto.SittelleProtos.ReportHeader.prototype.setHeaderFont = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SittelleProtos.ReportHeader} returns this
 */
proto.SittelleProtos.ReportHeader.prototype.clearHeaderFont = function() {
  return this.setHeaderFont(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SittelleProtos.ReportHeader.prototype.hasHeaderFont = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional ReportFont value_font = 11;
 * @return {?proto.SittelleProtos.ReportFont}
 */
proto.SittelleProtos.ReportHeader.prototype.getValueFont = function() {
  return /** @type{?proto.SittelleProtos.ReportFont} */ (
    jspb.Message.getWrapperField(this, proto.SittelleProtos.ReportFont, 11));
};


/**
 * @param {?proto.SittelleProtos.ReportFont|undefined} value
 * @return {!proto.SittelleProtos.ReportHeader} returns this
*/
proto.SittelleProtos.ReportHeader.prototype.setValueFont = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.SittelleProtos.ReportHeader} returns this
 */
proto.SittelleProtos.ReportHeader.prototype.clearValueFont = function() {
  return this.setValueFont(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.SittelleProtos.ReportHeader.prototype.hasValueFont = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.ReportHeaderGroup.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.ReportHeaderGroup.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.ReportHeaderGroup.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.ReportHeaderGroup} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ReportHeaderGroup.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.SittelleProtos.ReportHeader.toObject, includeInstance),
    style: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.ReportHeaderGroup}
 */
proto.SittelleProtos.ReportHeaderGroup.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.ReportHeaderGroup;
  return proto.SittelleProtos.ReportHeaderGroup.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.ReportHeaderGroup} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.ReportHeaderGroup}
 */
proto.SittelleProtos.ReportHeaderGroup.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.SittelleProtos.ReportHeader;
      reader.readMessage(value,proto.SittelleProtos.ReportHeader.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStyle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.ReportHeaderGroup.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.ReportHeaderGroup.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.ReportHeaderGroup} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ReportHeaderGroup.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.SittelleProtos.ReportHeader.serializeBinaryToWriter
    );
  }
  f = message.getStyle();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * repeated ReportHeader list = 1;
 * @return {!Array<!proto.SittelleProtos.ReportHeader>}
 */
proto.SittelleProtos.ReportHeaderGroup.prototype.getListList = function() {
  return /** @type{!Array<!proto.SittelleProtos.ReportHeader>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.SittelleProtos.ReportHeader, 1));
};


/**
 * @param {!Array<!proto.SittelleProtos.ReportHeader>} value
 * @return {!proto.SittelleProtos.ReportHeaderGroup} returns this
*/
proto.SittelleProtos.ReportHeaderGroup.prototype.setListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SittelleProtos.ReportHeader=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.ReportHeader}
 */
proto.SittelleProtos.ReportHeaderGroup.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SittelleProtos.ReportHeader, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.ReportHeaderGroup} returns this
 */
proto.SittelleProtos.ReportHeaderGroup.prototype.clearListList = function() {
  return this.setListList([]);
};


/**
 * optional uint32 style = 2;
 * @return {number}
 */
proto.SittelleProtos.ReportHeaderGroup.prototype.getStyle = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ReportHeaderGroup} returns this
 */
proto.SittelleProtos.ReportHeaderGroup.prototype.setStyle = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.ReportSett.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.ReportSett.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.ReportSett} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ReportSett.toObject = function(includeInstance, msg) {
  var f, obj = {
    ind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    caption: jspb.Message.getFieldWithDefault(msg, 3, ""),
    descr: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.ReportSett}
 */
proto.SittelleProtos.ReportSett.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.ReportSett;
  return proto.SittelleProtos.ReportSett.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.ReportSett} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.ReportSett}
 */
proto.SittelleProtos.ReportSett.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInd(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCaption(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescr(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.ReportSett.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.ReportSett.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.ReportSett} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ReportSett.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInd();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCaption();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDescr();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional uint32 ind = 1;
 * @return {number}
 */
proto.SittelleProtos.ReportSett.prototype.getInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ReportSett} returns this
 */
proto.SittelleProtos.ReportSett.prototype.setInd = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.SittelleProtos.ReportSett.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.ReportSett} returns this
 */
proto.SittelleProtos.ReportSett.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string caption = 3;
 * @return {string}
 */
proto.SittelleProtos.ReportSett.prototype.getCaption = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.ReportSett} returns this
 */
proto.SittelleProtos.ReportSett.prototype.setCaption = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string descr = 4;
 * @return {string}
 */
proto.SittelleProtos.ReportSett.prototype.getDescr = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.ReportSett} returns this
 */
proto.SittelleProtos.ReportSett.prototype.setDescr = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.ReportValue.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.ReportValue.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.ReportValue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.ReportValue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ReportValue.toObject = function(includeInstance, msg) {
  var f, obj = {
    valuesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.ReportValue}
 */
proto.SittelleProtos.ReportValue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.ReportValue;
  return proto.SittelleProtos.ReportValue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.ReportValue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.ReportValue}
 */
proto.SittelleProtos.ReportValue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addValues(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.ReportValue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.ReportValue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.ReportValue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ReportValue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValuesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string values = 1;
 * @return {!Array<string>}
 */
proto.SittelleProtos.ReportValue.prototype.getValuesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.SittelleProtos.ReportValue} returns this
 */
proto.SittelleProtos.ReportValue.prototype.setValuesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.ReportValue} returns this
 */
proto.SittelleProtos.ReportValue.prototype.addValues = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.ReportValue} returns this
 */
proto.SittelleProtos.ReportValue.prototype.clearValuesList = function() {
  return this.setValuesList([]);
};


/**
 * @enum {number}
 */
proto.SittelleProtos.EnumHorzntalAllign = {
  ALLIGN_HOR_UNDEFINED: 0,
  ALLIGN_HOR_LEFT: 1,
  ALLIGN_HOR_RIGHT: 2,
  ALLIGN_HOR_CENTER: 3,
  ALLIGN_HOR_WIDTH: 4
};

goog.object.extend(exports, proto.SittelleProtos);
