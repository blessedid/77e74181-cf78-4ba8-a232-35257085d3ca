// source: SittelleServiceChart.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var SittelleTypeManual_pb = require('./SittelleTypeManual_pb.js');
goog.object.extend(proto, SittelleTypeManual_pb);
var SittelleTypeDictionary_pb = require('./SittelleTypeDictionary_pb.js');
goog.object.extend(proto, SittelleTypeDictionary_pb);
goog.exportSymbol('proto.SittelleProtos.ChartListRequest', null, global);
goog.exportSymbol('proto.SittelleProtos.ChartListRes', null, global);
goog.exportSymbol('proto.SittelleProtos.ChartMonObjectListStateRequest', null, global);
goog.exportSymbol('proto.SittelleProtos.ChartMonObjectListStateRes', null, global);
goog.exportSymbol('proto.SittelleProtos.ChartSeriesListRequest', null, global);
goog.exportSymbol('proto.SittelleProtos.ChartSeriesListRes', null, global);
goog.exportSymbol('proto.SittelleProtos.ChartValuesRequestRequest', null, global);
goog.exportSymbol('proto.SittelleProtos.ChartValuesRequestRes', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.ChartListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.ChartListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.ChartListRequest.displayName = 'proto.SittelleProtos.ChartListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.ChartListRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.ChartListRes.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.ChartListRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.ChartListRes.displayName = 'proto.SittelleProtos.ChartListRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.ChartSeriesListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.ChartSeriesListRequest.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.ChartSeriesListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.ChartSeriesListRequest.displayName = 'proto.SittelleProtos.ChartSeriesListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.ChartSeriesListRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.ChartSeriesListRes.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.ChartSeriesListRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.ChartSeriesListRes.displayName = 'proto.SittelleProtos.ChartSeriesListRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.ChartValuesRequestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.ChartValuesRequestRequest.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.ChartValuesRequestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.ChartValuesRequestRequest.displayName = 'proto.SittelleProtos.ChartValuesRequestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.ChartValuesRequestRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.ChartValuesRequestRes.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.ChartValuesRequestRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.ChartValuesRequestRes.displayName = 'proto.SittelleProtos.ChartValuesRequestRes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.ChartMonObjectListStateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.SittelleProtos.ChartMonObjectListStateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.ChartMonObjectListStateRequest.displayName = 'proto.SittelleProtos.ChartMonObjectListStateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.SittelleProtos.ChartMonObjectListStateRes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.SittelleProtos.ChartMonObjectListStateRes.repeatedFields_, null);
};
goog.inherits(proto.SittelleProtos.ChartMonObjectListStateRes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.SittelleProtos.ChartMonObjectListStateRes.displayName = 'proto.SittelleProtos.ChartMonObjectListStateRes';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.ChartListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.ChartListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.ChartListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    connectionInd: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.ChartListRequest}
 */
proto.SittelleProtos.ChartListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.ChartListRequest;
  return proto.SittelleProtos.ChartListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.ChartListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.ChartListRequest}
 */
proto.SittelleProtos.ChartListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConnectionInd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.ChartListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.ChartListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.ChartListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConnectionInd();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional string sess_id = 1;
 * @return {string}
 */
proto.SittelleProtos.ChartListRequest.prototype.getSessId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.ChartListRequest} returns this
 */
proto.SittelleProtos.ChartListRequest.prototype.setSessId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 connection_ind = 2;
 * @return {number}
 */
proto.SittelleProtos.ChartListRequest.prototype.getConnectionInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ChartListRequest} returns this
 */
proto.SittelleProtos.ChartListRequest.prototype.setConnectionInd = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.ChartListRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.ChartListRes.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.ChartListRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.ChartListRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartListRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    chartListList: jspb.Message.toObjectList(msg.getChartListList(),
    SittelleTypeDictionary_pb.SittelleChart.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.ChartListRes}
 */
proto.SittelleProtos.ChartListRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.ChartListRes;
  return proto.SittelleProtos.ChartListRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.ChartListRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.ChartListRes}
 */
proto.SittelleProtos.ChartListRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new SittelleTypeDictionary_pb.SittelleChart;
      reader.readMessage(value,SittelleTypeDictionary_pb.SittelleChart.deserializeBinaryFromReader);
      msg.addChartList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.ChartListRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.ChartListRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.ChartListRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartListRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChartListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      SittelleTypeDictionary_pb.SittelleChart.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SittelleChart chart_list = 1;
 * @return {!Array<!proto.SittelleProtos.SittelleChart>}
 */
proto.SittelleProtos.ChartListRes.prototype.getChartListList = function() {
  return /** @type{!Array<!proto.SittelleProtos.SittelleChart>} */ (
    jspb.Message.getRepeatedWrapperField(this, SittelleTypeDictionary_pb.SittelleChart, 1));
};


/**
 * @param {!Array<!proto.SittelleProtos.SittelleChart>} value
 * @return {!proto.SittelleProtos.ChartListRes} returns this
*/
proto.SittelleProtos.ChartListRes.prototype.setChartListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SittelleProtos.SittelleChart=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.SittelleChart}
 */
proto.SittelleProtos.ChartListRes.prototype.addChartList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SittelleProtos.SittelleChart, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.ChartListRes} returns this
 */
proto.SittelleProtos.ChartListRes.prototype.clearChartListList = function() {
  return this.setChartListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.ChartSeriesListRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.ChartSeriesListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.ChartSeriesListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.ChartSeriesListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartSeriesListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    connectionInd: jspb.Message.getFieldWithDefault(msg, 2, 0),
    chartInd: jspb.Message.getFieldWithDefault(msg, 3, 0),
    chatParamListList: jspb.Message.toObjectList(msg.getChatParamListList(),
    SittelleTypeManual_pb.ManualValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.ChartSeriesListRequest}
 */
proto.SittelleProtos.ChartSeriesListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.ChartSeriesListRequest;
  return proto.SittelleProtos.ChartSeriesListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.ChartSeriesListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.ChartSeriesListRequest}
 */
proto.SittelleProtos.ChartSeriesListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConnectionInd(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChartInd(value);
      break;
    case 4:
      var value = new SittelleTypeManual_pb.ManualValue;
      reader.readMessage(value,SittelleTypeManual_pb.ManualValue.deserializeBinaryFromReader);
      msg.addChatParamList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.ChartSeriesListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.ChartSeriesListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.ChartSeriesListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartSeriesListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConnectionInd();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getChartInd();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getChatParamListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      SittelleTypeManual_pb.ManualValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sess_id = 1;
 * @return {string}
 */
proto.SittelleProtos.ChartSeriesListRequest.prototype.getSessId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.ChartSeriesListRequest} returns this
 */
proto.SittelleProtos.ChartSeriesListRequest.prototype.setSessId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 connection_ind = 2;
 * @return {number}
 */
proto.SittelleProtos.ChartSeriesListRequest.prototype.getConnectionInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ChartSeriesListRequest} returns this
 */
proto.SittelleProtos.ChartSeriesListRequest.prototype.setConnectionInd = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 chart_ind = 3;
 * @return {number}
 */
proto.SittelleProtos.ChartSeriesListRequest.prototype.getChartInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ChartSeriesListRequest} returns this
 */
proto.SittelleProtos.ChartSeriesListRequest.prototype.setChartInd = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated ManualValue chat_param_list = 4;
 * @return {!Array<!proto.SittelleProtos.ManualValue>}
 */
proto.SittelleProtos.ChartSeriesListRequest.prototype.getChatParamListList = function() {
  return /** @type{!Array<!proto.SittelleProtos.ManualValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, SittelleTypeManual_pb.ManualValue, 4));
};


/**
 * @param {!Array<!proto.SittelleProtos.ManualValue>} value
 * @return {!proto.SittelleProtos.ChartSeriesListRequest} returns this
*/
proto.SittelleProtos.ChartSeriesListRequest.prototype.setChatParamListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.SittelleProtos.ManualValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.ManualValue}
 */
proto.SittelleProtos.ChartSeriesListRequest.prototype.addChatParamList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.SittelleProtos.ManualValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.ChartSeriesListRequest} returns this
 */
proto.SittelleProtos.ChartSeriesListRequest.prototype.clearChatParamListList = function() {
  return this.setChatParamListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.ChartSeriesListRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.ChartSeriesListRes.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.ChartSeriesListRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.ChartSeriesListRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartSeriesListRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    seriesListList: jspb.Message.toObjectList(msg.getSeriesListList(),
    SittelleTypeDictionary_pb.ChartSeries.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.ChartSeriesListRes}
 */
proto.SittelleProtos.ChartSeriesListRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.ChartSeriesListRes;
  return proto.SittelleProtos.ChartSeriesListRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.ChartSeriesListRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.ChartSeriesListRes}
 */
proto.SittelleProtos.ChartSeriesListRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new SittelleTypeDictionary_pb.ChartSeries;
      reader.readMessage(value,SittelleTypeDictionary_pb.ChartSeries.deserializeBinaryFromReader);
      msg.addSeriesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.ChartSeriesListRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.ChartSeriesListRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.ChartSeriesListRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartSeriesListRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeriesListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      SittelleTypeDictionary_pb.ChartSeries.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ChartSeries series_list = 1;
 * @return {!Array<!proto.SittelleProtos.ChartSeries>}
 */
proto.SittelleProtos.ChartSeriesListRes.prototype.getSeriesListList = function() {
  return /** @type{!Array<!proto.SittelleProtos.ChartSeries>} */ (
    jspb.Message.getRepeatedWrapperField(this, SittelleTypeDictionary_pb.ChartSeries, 1));
};


/**
 * @param {!Array<!proto.SittelleProtos.ChartSeries>} value
 * @return {!proto.SittelleProtos.ChartSeriesListRes} returns this
*/
proto.SittelleProtos.ChartSeriesListRes.prototype.setSeriesListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SittelleProtos.ChartSeries=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.ChartSeries}
 */
proto.SittelleProtos.ChartSeriesListRes.prototype.addSeriesList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SittelleProtos.ChartSeries, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.ChartSeriesListRes} returns this
 */
proto.SittelleProtos.ChartSeriesListRes.prototype.clearSeriesListList = function() {
  return this.setSeriesListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.ChartValuesRequestRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.ChartValuesRequestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.ChartValuesRequestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.ChartValuesRequestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartValuesRequestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    connectionInd: jspb.Message.getFieldWithDefault(msg, 2, 0),
    chartInd: jspb.Message.getFieldWithDefault(msg, 3, 0),
    chatParamListList: jspb.Message.toObjectList(msg.getChatParamListList(),
    SittelleTypeManual_pb.ManualValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.ChartValuesRequestRequest}
 */
proto.SittelleProtos.ChartValuesRequestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.ChartValuesRequestRequest;
  return proto.SittelleProtos.ChartValuesRequestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.ChartValuesRequestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.ChartValuesRequestRequest}
 */
proto.SittelleProtos.ChartValuesRequestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConnectionInd(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChartInd(value);
      break;
    case 4:
      var value = new SittelleTypeManual_pb.ManualValue;
      reader.readMessage(value,SittelleTypeManual_pb.ManualValue.deserializeBinaryFromReader);
      msg.addChatParamList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.ChartValuesRequestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.ChartValuesRequestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.ChartValuesRequestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartValuesRequestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConnectionInd();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getChartInd();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getChatParamListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      SittelleTypeManual_pb.ManualValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional string sess_id = 1;
 * @return {string}
 */
proto.SittelleProtos.ChartValuesRequestRequest.prototype.getSessId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.ChartValuesRequestRequest} returns this
 */
proto.SittelleProtos.ChartValuesRequestRequest.prototype.setSessId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 connection_ind = 2;
 * @return {number}
 */
proto.SittelleProtos.ChartValuesRequestRequest.prototype.getConnectionInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ChartValuesRequestRequest} returns this
 */
proto.SittelleProtos.ChartValuesRequestRequest.prototype.setConnectionInd = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 chart_ind = 3;
 * @return {number}
 */
proto.SittelleProtos.ChartValuesRequestRequest.prototype.getChartInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ChartValuesRequestRequest} returns this
 */
proto.SittelleProtos.ChartValuesRequestRequest.prototype.setChartInd = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated ManualValue chat_param_list = 4;
 * @return {!Array<!proto.SittelleProtos.ManualValue>}
 */
proto.SittelleProtos.ChartValuesRequestRequest.prototype.getChatParamListList = function() {
  return /** @type{!Array<!proto.SittelleProtos.ManualValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, SittelleTypeManual_pb.ManualValue, 4));
};


/**
 * @param {!Array<!proto.SittelleProtos.ManualValue>} value
 * @return {!proto.SittelleProtos.ChartValuesRequestRequest} returns this
*/
proto.SittelleProtos.ChartValuesRequestRequest.prototype.setChatParamListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.SittelleProtos.ManualValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.ManualValue}
 */
proto.SittelleProtos.ChartValuesRequestRequest.prototype.addChatParamList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.SittelleProtos.ManualValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.ChartValuesRequestRequest} returns this
 */
proto.SittelleProtos.ChartValuesRequestRequest.prototype.clearChatParamListList = function() {
  return this.setChatParamListList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.ChartValuesRequestRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.ChartValuesRequestRes.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.ChartValuesRequestRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.ChartValuesRequestRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartValuesRequestRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    valueListList: jspb.Message.toObjectList(msg.getValueListList(),
    SittelleTypeDictionary_pb.ChartValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.ChartValuesRequestRes}
 */
proto.SittelleProtos.ChartValuesRequestRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.ChartValuesRequestRes;
  return proto.SittelleProtos.ChartValuesRequestRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.ChartValuesRequestRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.ChartValuesRequestRes}
 */
proto.SittelleProtos.ChartValuesRequestRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new SittelleTypeDictionary_pb.ChartValue;
      reader.readMessage(value,SittelleTypeDictionary_pb.ChartValue.deserializeBinaryFromReader);
      msg.addValueList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.ChartValuesRequestRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.ChartValuesRequestRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.ChartValuesRequestRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartValuesRequestRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValueListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      SittelleTypeDictionary_pb.ChartValue.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ChartValue value_list = 1;
 * @return {!Array<!proto.SittelleProtos.ChartValue>}
 */
proto.SittelleProtos.ChartValuesRequestRes.prototype.getValueListList = function() {
  return /** @type{!Array<!proto.SittelleProtos.ChartValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, SittelleTypeDictionary_pb.ChartValue, 1));
};


/**
 * @param {!Array<!proto.SittelleProtos.ChartValue>} value
 * @return {!proto.SittelleProtos.ChartValuesRequestRes} returns this
*/
proto.SittelleProtos.ChartValuesRequestRes.prototype.setValueListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SittelleProtos.ChartValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.ChartValue}
 */
proto.SittelleProtos.ChartValuesRequestRes.prototype.addValueList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SittelleProtos.ChartValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.ChartValuesRequestRes} returns this
 */
proto.SittelleProtos.ChartValuesRequestRes.prototype.clearValueListList = function() {
  return this.setValueListList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.ChartMonObjectListStateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.ChartMonObjectListStateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.ChartMonObjectListStateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartMonObjectListStateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    connectionInd: jspb.Message.getFieldWithDefault(msg, 2, 0),
    taskTypeInd: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.ChartMonObjectListStateRequest}
 */
proto.SittelleProtos.ChartMonObjectListStateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.ChartMonObjectListStateRequest;
  return proto.SittelleProtos.ChartMonObjectListStateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.ChartMonObjectListStateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.ChartMonObjectListStateRequest}
 */
proto.SittelleProtos.ChartMonObjectListStateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setConnectionInd(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTaskTypeInd(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.ChartMonObjectListStateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.ChartMonObjectListStateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.ChartMonObjectListStateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartMonObjectListStateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConnectionInd();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTaskTypeInd();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string sess_id = 1;
 * @return {string}
 */
proto.SittelleProtos.ChartMonObjectListStateRequest.prototype.getSessId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.SittelleProtos.ChartMonObjectListStateRequest} returns this
 */
proto.SittelleProtos.ChartMonObjectListStateRequest.prototype.setSessId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 connection_ind = 2;
 * @return {number}
 */
proto.SittelleProtos.ChartMonObjectListStateRequest.prototype.getConnectionInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ChartMonObjectListStateRequest} returns this
 */
proto.SittelleProtos.ChartMonObjectListStateRequest.prototype.setConnectionInd = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 task_type_ind = 3;
 * @return {number}
 */
proto.SittelleProtos.ChartMonObjectListStateRequest.prototype.getTaskTypeInd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.SittelleProtos.ChartMonObjectListStateRequest} returns this
 */
proto.SittelleProtos.ChartMonObjectListStateRequest.prototype.setTaskTypeInd = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.SittelleProtos.ChartMonObjectListStateRes.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.SittelleProtos.ChartMonObjectListStateRes.prototype.toObject = function(opt_includeInstance) {
  return proto.SittelleProtos.ChartMonObjectListStateRes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.SittelleProtos.ChartMonObjectListStateRes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartMonObjectListStateRes.toObject = function(includeInstance, msg) {
  var f, obj = {
    seriesValueListList: jspb.Message.toObjectList(msg.getSeriesValueListList(),
    SittelleTypeDictionary_pb.ChartSeriesValue.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.SittelleProtos.ChartMonObjectListStateRes}
 */
proto.SittelleProtos.ChartMonObjectListStateRes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.SittelleProtos.ChartMonObjectListStateRes;
  return proto.SittelleProtos.ChartMonObjectListStateRes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.SittelleProtos.ChartMonObjectListStateRes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.SittelleProtos.ChartMonObjectListStateRes}
 */
proto.SittelleProtos.ChartMonObjectListStateRes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new SittelleTypeDictionary_pb.ChartSeriesValue;
      reader.readMessage(value,SittelleTypeDictionary_pb.ChartSeriesValue.deserializeBinaryFromReader);
      msg.addSeriesValueList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.SittelleProtos.ChartMonObjectListStateRes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.SittelleProtos.ChartMonObjectListStateRes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.SittelleProtos.ChartMonObjectListStateRes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.SittelleProtos.ChartMonObjectListStateRes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSeriesValueListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      SittelleTypeDictionary_pb.ChartSeriesValue.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ChartSeriesValue series_value_list = 1;
 * @return {!Array<!proto.SittelleProtos.ChartSeriesValue>}
 */
proto.SittelleProtos.ChartMonObjectListStateRes.prototype.getSeriesValueListList = function() {
  return /** @type{!Array<!proto.SittelleProtos.ChartSeriesValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, SittelleTypeDictionary_pb.ChartSeriesValue, 1));
};


/**
 * @param {!Array<!proto.SittelleProtos.ChartSeriesValue>} value
 * @return {!proto.SittelleProtos.ChartMonObjectListStateRes} returns this
*/
proto.SittelleProtos.ChartMonObjectListStateRes.prototype.setSeriesValueListList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.SittelleProtos.ChartSeriesValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.SittelleProtos.ChartSeriesValue}
 */
proto.SittelleProtos.ChartMonObjectListStateRes.prototype.addSeriesValueList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.SittelleProtos.ChartSeriesValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.SittelleProtos.ChartMonObjectListStateRes} returns this
 */
proto.SittelleProtos.ChartMonObjectListStateRes.prototype.clearSeriesValueListList = function() {
  return this.setSeriesValueListList([]);
};


goog.object.extend(exports, proto.SittelleProtos);
